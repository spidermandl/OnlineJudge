-- MySQL dump 10.13  Distrib 5.1.73, for redhat-linux-gnu (x86_64)
--
-- Host: localhost    Database: judge
-- ------------------------------------------------------
-- Server version	5.1.73

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `compileinfo`
--

DROP TABLE IF EXISTS `compileinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `compileinfo` (
  `solution_id` int(11) NOT NULL DEFAULT '0',
  `error` text,
  PRIMARY KEY (`solution_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `compileinfo`
--

LOCK TABLES `compileinfo` WRITE;
/*!40000 ALTER TABLE `compileinfo` DISABLE KEYS */;
INSERT INTO `compileinfo` VALUES (1002,'chown: invalid user: `judge\'\nMain.c:1:9: error: #include expects \"FILENAME\" or <FILENAME>\nMain.c: In function \'main\':\nMain.c:5: warning: implicit declaration of function \'scanf\'\nMain.c:5: warning: incompatible implicit declaration of built-in function \'scanf\'\nMain.c:6: warning: implicit declaration of function \'printf\'\nMain.c:6: warning: incompatible implicit declaration of built-in function \'printf\'\n'),(1001,'/usr/bin/ld: cannot open output file Main: Permission denied\ncollect2: ld returned 1 exit status\n'),(1009,'Main.java:4: error: class Summing is public, should be declared in a file named Summing.java\npublic class Summing {\n       ^\n1 error\n'),(1022,'Main.cc: In function \'int main()\':\nMain.cc:20: warning: repeated \'I\' flag in format\nMain.cc:20: warning: format \'%IId\' expects type \'int*\', but argument 2 has type \'long long int*\'\nMain.cc:20: warning: repeated \'I\' flag in format\nMain.cc:20: warning: format \'%IId\' expects type \'int*\', but argument 3 has type \'long long int*\'\nMain.cc:22: warning: repeated \'I\' flag in format\nMain.cc:22: warning: format \'%IId\' expects type \'int*\', but argument 2 has type \'long long int*\'\nMain.cc:57: error: \'ll\' was not declared in this scope\nMain.cc:58: error: expected \';\' before \'printf\'\n');
/*!40000 ALTER TABLE `compileinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contest`
--

DROP TABLE IF EXISTS `contest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contest` (
  `contest_id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `start_time` datetime DEFAULT NULL,
  `end_time` datetime DEFAULT NULL,
  `defunct` char(1) NOT NULL DEFAULT 'N',
  `description` text,
  `private` tinyint(4) NOT NULL DEFAULT '0',
  `langmask` int(11) NOT NULL DEFAULT '0' COMMENT 'bits for LANG to mask',
  PRIMARY KEY (`contest_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1000 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contest`
--

LOCK TABLES `contest` WRITE;
/*!40000 ALTER TABLE `contest` DISABLE KEYS */;
/*!40000 ALTER TABLE `contest` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contest_problem`
--

DROP TABLE IF EXISTS `contest_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contest_problem` (
  `problem_id` int(11) NOT NULL DEFAULT '0',
  `contest_id` int(11) DEFAULT NULL,
  `title` char(200) NOT NULL DEFAULT '',
  `num` int(11) NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contest_problem`
--

LOCK TABLES `contest_problem` WRITE;
/*!40000 ALTER TABLE `contest_problem` DISABLE KEYS */;
/*!40000 ALTER TABLE `contest_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custominput`
--

DROP TABLE IF EXISTS `custominput`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custominput` (
  `solution_id` int(11) NOT NULL DEFAULT '0',
  `input_text` text,
  PRIMARY KEY (`solution_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custominput`
--

LOCK TABLES `custominput` WRITE;
/*!40000 ALTER TABLE `custominput` DISABLE KEYS */;
/*!40000 ALTER TABLE `custominput` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `loginlog`
--

DROP TABLE IF EXISTS `loginlog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `loginlog` (
  `user_id` varchar(48) NOT NULL DEFAULT '',
  `password` varchar(40) DEFAULT NULL,
  `ip` varchar(100) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  KEY `user_log_index` (`user_id`,`time`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `loginlog`
--

LOCK TABLES `loginlog` WRITE;
/*!40000 ALTER TABLE `loginlog` DISABLE KEYS */;
INSERT INTO `loginlog` VALUES ('spidermandl','Sd1cnKEP4R7WJlavC9v0wGsupQdmNjE0','127.0.0.1','2016-06-12 20:43:24'),('spidermandl','9V9yz1a4PBSH6KDlqO+4LrnpYD9mNjE0','127.0.0.1','2016-06-12 22:09:35'),('spidermandl','RuYbMughqcdINgr2NXvx1rUmrPFmNjE0','127.0.0.1','2016-06-12 22:09:52'),('spidermandl','9V9yz1a4PBSH6KDlqO+4LrnpYD9mNjE0','127.0.0.1','2016-06-12 22:11:21'),('spidermandl','RuYbMughqcdINgr2NXvx1rUmrPFmNjE0','127.0.0.1','2016-06-12 22:11:33'),('spidermandl','9V9yz1a4PBSH6KDlqO+4LrnpYD9mNjE0','127.0.0.1','2016-06-12 22:30:06'),('spidermandl','RuYbMughqcdINgr2NXvx1rUmrPFmNjE0','127.0.0.1','2016-06-12 22:30:26'),('spidermandl','0bsp61nCATd3alwNnXaeHaCrUqdmNjE0','127.0.0.1','2016-06-12 22:30:41'),('orientalstu','sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','127.0.0.1','2016-06-12 22:31:25'),('orientalstu','sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','127.0.0.1','2016-06-12 22:31:36'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 00:07:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 00:08:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:13:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:28:17'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:28:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:31:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:48:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:54:54'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 12:55:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:04:17'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:04:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:05:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:14:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:15:17'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 13:21:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:37:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:39:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:41:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:42:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 16:43:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 17:01:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:34:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:43:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:45:07'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:45:29'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-13 20:56:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 00:48:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 00:58:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 00:58:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 00:58:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 00:59:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:07:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:07:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:09:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:10:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:10:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:11:46'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:18:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:19:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:21:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 01:29:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 11:55:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 11:55:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 12:14:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 13:46:23'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 15:14:50'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 15:14:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 15:18:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 15:27:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 16:05:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 17:23:07'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 17:24:53'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 17:27:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 17:57:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 17:59:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:01:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:01:23'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:02:08'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:02:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:02:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:03:48'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:04:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:04:49'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:05:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:06:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:07:06'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:13:37'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:16:29'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:16:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:20:37'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:28:07'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:28:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:28:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:29:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:29:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:31:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:32:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:33:40'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:34:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:35:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:35:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:41:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:43:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:49:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:49:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:53:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:54:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 18:58:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 19:00:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 19:00:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 21:01:15'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:27:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:28:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:30:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:38:37'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:43:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:47:40'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:48:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-14 23:55:14'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 00:07:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 01:01:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 01:01:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:00:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:05:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:44:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:46:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:47:15'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:48:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:49:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:49:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:50:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:51:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:51:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:52:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:52:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:54:13'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:56:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:56:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:58:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:58:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 17:59:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:45:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:45:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:46:40'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:47:06'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:48:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 18:49:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:02:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:03:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:03:45'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:04:14'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:04:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:04:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:04:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:04:29'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:07:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:08:25'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:10:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:14:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:14:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:15:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:17:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:18:13'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:18:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:20:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:20:54'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:21:25'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:21:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:21:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:22:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:22:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:05'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:23:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:24:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:24:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:27:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:27:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:27:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:27:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:32:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:32:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:45'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:45'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:46'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:33:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:34:17'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:34:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:34:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:35:04'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:35:20'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:38:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:39:05'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:39:08'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:39:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:39:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:39:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:40:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:40:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:40:41'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:41:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:43:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:44:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:45:06'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:46:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:53:07'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:53:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:53:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:54:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:54:46'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 19:55:05'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:00:14'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:03:41'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:03:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:04:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:04:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:05:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:05:50'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:06:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:07:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:14:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:15:10'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:15:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:15:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:15:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:16:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:17:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:17:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:18:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:18:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:18:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:18:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:19:04'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:19:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:19:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:20:15'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:20:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:21:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:23:27'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:23:42'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:24:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:25:08'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:25:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:25:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:26:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:27:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:27:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:27:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:28:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:51'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:30:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:31:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:31:07'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:31:20'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 20:31:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:52:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:52:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:57:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:58:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:59:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:59:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:59:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-15 23:59:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:00:13'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:00:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:01:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:01:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:01:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:02:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:02:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:02:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:02:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:02:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:03:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:13:06'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:13:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:13:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:14:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:15:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:16:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:16:55'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 00:27:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:04:21'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:07:17'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:07:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:08:14'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:08:30'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:08:49'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:09:53'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:09:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:17:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:18:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:18:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:19:39'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:20:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:20:29'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:20:50'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:21:15'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:21:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:22:12'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:23:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:23:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:27:23'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:27:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:27:54'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 01:29:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:35:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:36:12'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:36:40'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:37:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:37:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:37:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 12:38:03'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:36:23'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:36:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:43:06'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:51:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:51:37'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:52:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:52:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:52:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:57:05'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 13:57:15'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 15:45:58'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 15:46:19'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 15:54:40'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 15:55:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 17:18:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 17:18:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 17:19:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 17:20:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 17:25:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:17:24'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:19:56'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:27:13'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:28:22'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:35:26'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:36:35'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:39:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:41:18'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:41:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:42:25'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:43:20'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:43:25'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 18:43:59'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 19:36:09'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 19:42:49'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 19:44:32'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 19:58:02'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 20:19:31'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 20:22:54'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 20:27:28'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 20:27:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-16 20:27:57'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 00:50:41'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 00:50:49'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 00:55:50'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 00:57:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 10:57:11'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 11:15:34'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 11:50:38'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 11:53:16'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 13:40:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 13:56:33'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 15:06:04'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 15:06:45'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 15:27:52'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 17:41:04'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 17:44:43'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-17 17:48:01'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-18 10:21:00'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-18 10:23:47'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-18 10:27:44'),('admin','jsuhyzX1pkb2mLJvJ8jRNYMzylU4Mzgz','127.0.0.1','2016-06-18 17:47:52'),('spidermandl','9V9yz1a4PBSH6KDlqO+4LrnpYD9mNjE0','127.0.0.1','2016-06-19 01:03:59'),('spidermandl','94peyvAD0ZvPY+yDHw+iuKTrwuhmNjE0','127.0.0.1','2016-06-19 01:04:12'),('spidermandl','DYjNOR0tVcv0SjyNxas3ZKaFGmNmNjE0','127.0.0.1','2016-06-19 01:04:26'),('orientalstu','b6Y54l8rM914D3tdrnVb9rkQ9jFjYmRm','127.0.0.1','2016-06-19 15:11:43'),('orientalstu','sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','127.0.0.1','2016-06-19 15:11:49'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:24:20'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:42:57'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:45:07'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:46:55'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:47:11'),('admin','pjLRYCZGxTMElbVzCLHyCUotuw44Mzgz','180.154.204.137','2016-06-22 14:59:00'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 14:59:13'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:01:54'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:03:32'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 15:04:32'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:11:22'),('orientalstu','suaob3q4AUwbmHW1dMrdaDlVeZtjYmRm','180.154.204.137','2016-06-22 15:11:45'),('orientalstu','dqpXDcgPtkx6iEZRW0eOlgqXRhdjYmRm','180.154.204.137','2016-06-22 15:11:52'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 15:18:54'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:24:59'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:30:31'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:32:24'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:49:53'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 15:51:15'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 15:51:36'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 15:53:26'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 16:12:31'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 16:17:37'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 16:18:08'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 16:18:41'),('des1','BXKEbshGLRRnu8X/SeV2BjqbWFEzYzUw','180.154.204.137','2016-06-22 16:20:53'),('des1','TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','180.154.204.137','2016-06-22 16:22:39'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.154.204.137','2016-06-22 16:29:35'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 13:33:38'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 13:35:18'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 13:38:56'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 13:49:27'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:08:26'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:08:31'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:16:53'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:19:32'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:23:58'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:37:03'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:40:27'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:41:09'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:49:02'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 14:57:14'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 15:08:31'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 15:56:36'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 15:58:03'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 15:59:47'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:03:34'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:04:17'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:06:40'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:11:31'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:39:05'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 16:59:38'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 17:06:18'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.18','2016-06-24 17:25:19'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','101.45.212.137','2016-06-26 01:08:37'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','211.161.245.121','2016-06-28 10:15:54'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','115.174.238.125','2016-06-29 11:49:09'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.137.33','2016-06-30 14:44:39'),('orientalstu','suaob3q4AUwbmHW1dMrdaDlVeZtjYmRm','58.37.160.186','2016-07-02 18:27:18'),('orientalstu','dqpXDcgPtkx6iEZRW0eOlgqXRhdjYmRm','58.37.160.186','2016-07-02 18:27:40'),('orientalstu','sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','58.37.160.186','2016-07-02 18:27:52'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','180.173.182.208','2016-07-05 20:29:17'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','101.95.104.34','2016-07-07 10:47:16'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','202.120.30.245','2016-07-09 14:52:01'),('orientalstu','sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','211.161.247.219','2016-07-09 22:03:48'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','118.205.27.155','2016-07-10 23:52:31'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','202.120.30.245','2016-07-12 19:48:35'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','202.120.30.245','2016-07-13 18:09:43'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','101.244.81.236','2016-07-14 23:53:30'),('admin','krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','61.170.136.151','2016-07-16 16:11:04');
/*!40000 ALTER TABLE `loginlog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mail`
--

DROP TABLE IF EXISTS `mail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mail` (
  `mail_id` int(11) NOT NULL AUTO_INCREMENT,
  `to_user` varchar(48) NOT NULL DEFAULT '',
  `from_user` varchar(48) NOT NULL DEFAULT '',
  `title` varchar(200) NOT NULL DEFAULT '',
  `content` text,
  `new_mail` tinyint(1) NOT NULL DEFAULT '1',
  `reply` tinyint(4) DEFAULT '0',
  `in_date` datetime DEFAULT NULL,
  `defunct` char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`mail_id`),
  KEY `uid` (`to_user`)
) ENGINE=MyISAM AUTO_INCREMENT=1014 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mail`
--

LOCK TABLES `mail` WRITE;
/*!40000 ALTER TABLE `mail` DISABLE KEYS */;
INSERT INTO `mail` VALUES (1013,'spidermandl','admin','adfadsfa','asdfasdf',1,0,'2016-06-18 19:33:17','N');
/*!40000 ALTER TABLE `mail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `news`
--

DROP TABLE IF EXISTS `news`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `news` (
  `news_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(48) NOT NULL DEFAULT '',
  `title` varchar(200) NOT NULL DEFAULT '',
  `content` text NOT NULL,
  `time` datetime NOT NULL DEFAULT '2016-05-13 19:24:00',
  `importance` tinyint(4) NOT NULL DEFAULT '0',
  `defunct` char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`news_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1004 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `news`
--

LOCK TABLES `news` WRITE;
/*!40000 ALTER TABLE `news` DISABLE KEYS */;
/*!40000 ALTER TABLE `news` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `online`
--

DROP TABLE IF EXISTS `online`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `online` (
  `hash` varchar(32) COLLATE utf8_unicode_ci NOT NULL,
  `ip` varchar(20) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `ua` varchar(255) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `refer` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `lastmove` int(10) NOT NULL,
  `firsttime` int(10) DEFAULT NULL,
  `uri` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`hash`),
  UNIQUE KEY `hash` (`hash`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `online`
--

LOCK TABLES `online` WRITE;
/*!40000 ALTER TABLE `online` DISABLE KEYS */;
/*!40000 ALTER TABLE `online` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `options`
--

DROP TABLE IF EXISTS `options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `options` (
  `option_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL DEFAULT '',
  `desc` varchar(128) NOT NULL DEFAULT '',
  `value` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`option_id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `options`
--

LOCK TABLES `options` WRITE;
/*!40000 ALTER TABLE `options` DISABLE KEYS */;
INSERT INTO `options` VALUES (2,'ga_code','Google Analytics Code','UA-YOURCODE-1');
/*!40000 ALTER TABLE `options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `privilege`
--

DROP TABLE IF EXISTS `privilege`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `privilege` (
  `user_id` char(48) NOT NULL DEFAULT '',
  `rightstr` char(30) NOT NULL DEFAULT '',
  `defunct` char(1) NOT NULL DEFAULT 'N'
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `privilege`
--

LOCK TABLES `privilege` WRITE;
/*!40000 ALTER TABLE `privilege` DISABLE KEYS */;
INSERT INTO `privilege` VALUES ('admin','administrator','N');
/*!40000 ALTER TABLE `privilege` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problem`
--

DROP TABLE IF EXISTS `problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `problem` (
  `problem_id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) NOT NULL DEFAULT '',
  `description` text,
  `input` text,
  `output` text,
  `sample_input` text,
  `sample_output` text,
  `spj` char(1) NOT NULL DEFAULT '0',
  `hint` text,
  `source` varchar(100) DEFAULT NULL,
  `in_date` datetime DEFAULT NULL,
  `time_limit` int(11) NOT NULL DEFAULT '0',
  `memory_limit` int(11) NOT NULL DEFAULT '0',
  `defunct` char(1) NOT NULL DEFAULT 'N',
  `accepted` int(11) DEFAULT '0',
  `submit` int(11) DEFAULT '0',
  `solved` int(11) DEFAULT '0',
  PRIMARY KEY (`problem_id`)
) ENGINE=MyISAM AUTO_INCREMENT=100040 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem`
--

LOCK TABLES `problem` WRITE;
/*!40000 ALTER TABLE `problem` DISABLE KEYS */;
INSERT INTO `problem` VALUES (1000,'demo test','<p>Calculate a + b.</p>','<p>&nbsp;</p>\n<p class=\"p1\">Two integers a and b, separated by a space. (0&lt;=a,b&lt;=9).</p>','<p>&nbsp;</p>\n<p class=\"p1\">The sum of a and b in the first line.</p>','5 7','12','0','<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\">Your program should always read from stdin(Standard Input), and write to stdout(Standard Output). Solutions to problem 10000 can be as follows:</p>\n<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\">C:</p>\n<p class=\"p1\">#include</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">int main() {</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;int a, b;</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;scanf(\"%d%d\", &amp;a, &amp;b);</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%d\\n\", a + b);</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;return 0;</p>\n<p class=\"p1\">}</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">C++:</p>\n<p class=\"p1\">#include</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">using namespace std;</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">int main() {</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;int a, b;</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;cin &gt;&gt; a &gt;&gt; b;</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; a + b &lt;&lt; endl;</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;return 0;</p>\n<p class=\"p1\">}</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">Pascal:</p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\">var</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;a, b: Integer;</p>\n<p class=\"p1\">begin</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;readln(a, b);</p>\n<p class=\"p1\">&nbsp;&nbsp;&nbsp;&nbsp;writeln(a + b);</p>\n<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\">end.</p>','','2016-06-19 15:39:27',1,10,'N',1,2,0),(1001,'isPrime(maxK-minK)','<p>&nbsp; &nbsp; 给定一个长度为N(0&lt;n&lt;=10000)的序列，保证每一个序列中的数字a[i]是小于maxlongint的非负整数 ，编程要求求出整个序列中第k大的数字减去第k小的数字的值m，并判断m是否为质数。(0&lt;k&lt;=n)</p>','<p>输入格式：</p>\n<p>第一行为2个数n，k（含义如上题）</p>\n<p>第二行为n个数，表示这个序列</p>','<p>输出格式：</p>\n<p>如果m为质数则</p>\n<p>第一行为\'YES\'(没有引号）</p>\n<p>第二行为这个数m</p>\n<p>否则&nbsp;</p>\n<p>第一行为\'NO\'</p>\n<p>第二行为这个数m</p>','5 2\n1 2 3 4 5','YES\n2','0','<p>对于第K大的详细解释:</p>\n<p>如果一个序列为1 2 2 2 2 3</p>\n<p>第1大 为3</p>\n<p>第2大 为2</p>\n<p>第3大 为2</p>\n<p>第4大 为2</p>\n<p>第5大 为1</p>\n<p>第K小与上例相反</p>\n<p>&nbsp;</p>\n<p>另外需要注意的是</p>\n<p>最小的质数是2,如果小于2的话,请直接输出NO</p>','','2016-06-30 19:20:25',5,10,'Y',NULL,0,0),(10,'小熊的购物单','<p><span style=\"color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; font-size: 13px; line-height: 26px; text-indent: 26px; background-color: rgba(255, 255, 255, 0.65098);\">小熊今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：&ldquo;你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N 元钱就行&rdquo;。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的N 元。于是，他把每件物品规定了一个重要度，分为5 等：用整数1~5 表示，第5 等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过N 元（可以等于N 元）的前提下，使每件物品的价格与重要度的乘积的总和最大。设第j 件物品的价格为v[j]，重要度为w[j]，共选中了k 件物品，编号依次为j1...jk，则所求的总和为：v[j1]*w[j1]+..+v[jk]*w[jk]请你帮助金明设计一个满足要求的购物单.</span></p>','<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">输入的第1 行，为两个正整数，用一个空格隔开：</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">N m</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">（其中N（&lt;30000）表示总钱数，m(&lt;25)为希望购买物品的个数。）</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">从第2 行到第m+1 行，第j 行给出了编号为j-1</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">的物品的基本数据，每行有2 个非负整数</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">v p</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">（其中v 表示该物品的价格（v&le;10000），p 表示该物品的重要度（1~5））</p>','<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">输出只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的</p>\n<p style=\"margin: 0px; padding: 0px; border: 0px; font-size: 13px; vertical-align: baseline; text-indent: 2em; line-height: 2em; color: #333333; font-family: \'Microsoft YaHei\', \'Hiragino Sans GB\', \'ST Heiti\', \'LiHei Pro Medium\', \'Microsoft Jhenghei\', \'Wenquanyi Micro Hei\', \'WenQuanYi Zen Hei\'; background-color: rgba(255, 255, 255, 0.65098);\">最大值（&lt;100000000）</p>','1000 5\n800 2\n400 5\n300 5\n400 3\n200 2','3900','0','<p>动态规划</p>','','2016-06-20 15:54:52',2,10,'Y',NULL,0,0),(1002,'Highest Scholarship','<p>某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：</p>\n<p>1) &nbsp; &nbsp; 院士奖学金，每人8000元，期末平均成绩高于80分（&gt;80），并且在本学期内发表1篇或1篇以上论文的学生均可获得；</p>\n<p>&nbsp;</p>\n<p>2) &nbsp; &nbsp; 五四奖学金，每人4000元，期末平均成绩高于85分（&gt;85），并且班级评议成绩高于80分（&gt;80）的学生均可获得；</p>\n<p>&nbsp;</p>\n<p>3) &nbsp; &nbsp; 成绩优秀奖，每人2000元，期末平均成绩高于90分（&gt;90）的学生均可获得；</p>\n<p>&nbsp;</p>\n<p>4) &nbsp; &nbsp; 西部奖学金，每人1000元，期末平均成绩高于85分（&gt;85）的西部省份学生均可获得；</p>\n<p>&nbsp;</p>\n<p>5) &nbsp; &nbsp; 班级贡献奖，每人850元，班级评议成绩高于80分（&gt;80）的学生干部均可获得；</p>\n<p>&nbsp;</p>\n<p>只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是87分，班级评议成绩82分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是4850元。</p>\n<p>&nbsp;</p>\n<p>现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>','<p>&nbsp;输入的第一行是一个整数N（1 &lt;= N &lt;= 100），表示学生的总数。接下来的N行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过20的字符串（不含空格）；期末平均成绩和班级评议成绩都是0到100之间的整数（包括0和100）；是否是学生干部和是否是西部省份学生分别用一个字符表示，Y表示是，N表示不是；发表的论文数是0到10的整数（包括0和10）。每两个相邻数据项之间用一个空格分隔。</p>','<p>输出包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。第三行是这N个学生获得的奖学金的总数。</p>','4\nYaoLin 87 82 Y N 0\nChenRuiyi 88 78 N Y 1\nLiXin 92 88 N N 0\nZhangQin 83 87 Y N 1\n','ChenRuiyi\n9000\n28700\n','0','','','2016-06-30 20:10:01',10,100,'Y',NULL,0,0),(1003,'Sea Bright Codes','<p class=\"p1\"><span class=\"s1\">Given N, B, and D: Find a set of N codewords (1 &lt;= N &lt;= 64), each of length B bits (1 &lt;= B &lt;= 8), such that each of the codewords is at least SB&nbsp;distance of D (1 &lt;= D &lt;= 7) away from each of the other codewords. The SB&nbsp;distance between a pair of codewords is the number of binary bits that differ in their binary notation. Consider the two codewords 0x554 and 0x234 and their differences (0x554 means the hexadecimal number with hex digits 5, 5, and 4):</span></p>\n<p class=\"p1\"><span class=\"s1\">0x554 = 0101 0101 0100 0x234 = 0010 0011 0100 Bit differences: xxx xx</span></p>\n<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Since five bits were different, the SB&nbsp;distance is 5.</span></p>','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">N, B, D on a single line</span></p>','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">N codewords, sorted, in decimal, ten per line. In the case of multiple solutions, your program should output the solution which, if interpreted as a base 2^B integer, would have the least value.</span></p>','16 7 3','0 7 25 30 42 45 51 52 75 76 82 85 97 102 120 127','0','<p class=\"p1\"><span class=\"s1\">There are only a few tools we need to solve this problem. First of all, we can use basic techniques to find the Nth bit of a number M: counting the least significant bit as bit 0, the next bit as bit 1, etc., we can find the value of that bit through the expression</span></p>\n<p class=\"p1\"><span class=\"s1\">int Nth_bit = (1 &lt;&lt; N) &amp; M;</span></p>\n<p class=\"p1\"><span class=\"s1\">In other words, we are shifting the number 1 left by N spaces, and then performing a binary AND on the resulting number with our original number, which will leave either a 1 in the Nth bit or a 0. So the first thing we have to do is find out the distance between each pair of numbers within the set of all numbers with B bits (0..2B-1).</span></p>\n<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">We also know that 0 can be one of the numbers in the set, because if the minimum number in the set were N instead of 0, we could XOR N to each number in the set and they would still be the same distance apart. The limits on the problem are low enough that we can do a DFS(depth first search), and as soon as we hit a solution we can output it and exit.</span></p>','','2016-07-01 01:33:06',5,10,'N',2,2,0),(101,'Summing a Series  ','<p>Sum a given integer series.</p>','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">&nbsp;series of positive integers, one per line. Proceed to the end of input.</span></p>','<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><span style=\"font-size: 14px;\">One integer, which is the sum of the input series. Our input guarantees the correct answer will never exceed&nbsp;</span></span><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\"><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><span style=\"font-size: 14px;\">2</span></span></span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">31</sup><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">-1.</span></p>','3\n9\n7','19','0','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">How to detect the end of input?</span></p>','','2016-07-01 23:11:00',1,1,'N',1,2,0),(102,'Compass Moving','<p>You are given a tower of n disks, initially stacked in decreasing size on one of three pegs, your objective is to transfer the entire tower to one of the other pegs, moving only one disk at a time and never moving a larger one onto a smaller. &nbsp;</p>\n<p>For example, n = 2:</p>\n<p><a style=\"text-align: -webkit-center; background-color: #e8e8ff;\"><span style=\"background-color: #ffffff; font-size: 14px;\"><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><img src=\"data/102/102.png\" alt=\"hanoi\" /></span></span></a></p>\n<p>We need 3 moves to perform the task.</p>\n<p>&nbsp;</p>\n<p>Now the question arises: What\'s the best we can do? That is, how many moves are necessary and sufficient to perform the task? &nbsp; Please write a program to find out the minimum number of moves we need to do with n disks in the tower.</p>','<p>One positive integer, n (1 &lt;= n &lt;= 64).</p>','<p>One integer, the minimum number of moves needed.</p>','2','3','0','<p>The answer might be a huge integer which cannot be hold in a 32-bit int variable.</p>','','2016-07-01 23:17:21',5,10,'N',1,1,0),(103,'Prime Test','<p>A prime number (or prime integer, often simply called a \"prime\" for short) is a positive integer p&gt;1 that has no positive integer divisors other than 1 and p itself. &nbsp;For example, the only divisors of 13 are 1 and 13, making 13 a prime number, while the number 24 has divisors 1, 2, 3, 4, 6, 8, 12, and 24 (corresponding to the factorization 24=23*3), making 24 not a prime number. Positive integers other than 1 which are not prime are called composite numbers. &nbsp;Given an integer n, write a program to check whether n is a prime number or not.</p>','<p>One integer, n. (2&lt;=n&lt;=<span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">2</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">31</sup>&nbsp;-1).</p>','<p>Output \"YES\" if n is a prime number, otherwise \"NO\".</p>','2','YES','0','','','2016-07-01 23:29:40',2,32,'N',1,1,0),(104,'Prime Refactorying','<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><span style=\"font-size: 14px;\">For a given integer, Prime Refactorying is finding which prime numbers you need to multiply together to get the original number, also called prime decomposition. &nbsp; Given a positive integer n&gt;=2, the prime refactorying&nbsp;is written</span></span><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n = p<sub>1</sub><sup>a<sub>1</sub></sup>p<sub>2</sub><sup>a<sub>2</sub></sup>...p<sub>k</sub><sup>a<sub>k</sub></sup></em><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" />where the pis are the k prime factors, each of order ai. &nbsp;</p>\n<p>Write a program to factor a given integer n.</p>','<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">One integer,&nbsp;</span><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n</em><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">. (2&lt;=</span><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n</em><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">&lt;=2</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">31</sup><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">-1).</span></p>','<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><span style=\"font-size: 14px;\">Output the refactorying of n as follows: &nbsp;</span></span></p>\n<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体;\"><span style=\"font-size: 14px;\">n=p1(a1)p2(a2)...pk(ak) &nbsp;Where p1&lt;p2&lt;...&lt;pk, and ai denotes the exponent of pi.</span></span><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">For example, for&nbsp;</span><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n</em><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">&nbsp;= 1500 = 2</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">2</sup><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">*3*5</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">3</sup><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">, the output should be:</span><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" /><br style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\" />1500=2(2)3(1)5(3)</p>','15','15=3(1)5(1)','0','','','2016-07-01 23:33:16',0,0,'N',1,1,0),(106,'The last non-zero digit of n!','<p>Given an integer n, please output the last non-zero digit of n! &nbsp;</p>\n<p>For example, 5!=120, the last non-zero digit is 2, for 9!=362880 it is 8.</p>','<p><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">One positive integer&nbsp;</span><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n</em><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">. (0&lt;</span><em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">n</em><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">&lt;10</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">10001</sup><span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">)</span></p>','<p>The last non-zero digit of n!</p>','1','1','0','','','2016-07-02 13:55:51',5,64,'N',NULL,0,0),(107,'a^b mod c','<p>The calculation of&nbsp;<em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: rgb(232, 232, 255);\"><strong>a<sup>b</sup>&nbsp;mod c</strong></em>&nbsp;arises in many fields of computer science, this time we brought it to you, can you prove us your talent?</p>','<p>Three integers, a, b, c. (1&lt;=a,b,c&lt;=<span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">2</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">31</sup>-1)</p>','<p>One integer, the result of&nbsp;<em style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">a</em><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\"><em>b</em></sup>&nbsp;mod c.</p>','3 7 15','12','0','<p>The operator mod is defined as calculating the reminder of a divides b. For example, 5 mod 1 = 0, 5 mod 2 = 1, 5 mod 3 = 2, 5 mod 4 = 1, 5 mod 5 = 0, 5 mod 6 = 5, 5 mod 7 = 5, 5 mod 8 = 5, etc. &nbsp;</p>\n<p>The operator mod has following properties:</p>\n<p>(a + b) mod c = ((a mod c) + b) mod c &nbsp;</p>\n<p>(a - b) mod c = ((a mod c) - b) mod c &nbsp;</p>\n<p>(a * b) mod c = ((a mod c) * b) mod c &nbsp;</p>\n<p>It is obvious that (a + b) mod c = ((a mod c) + (b mod c)) mod c, and etc.</p>','','2016-07-02 14:04:50',1,64,'N',1,1,0),(108,'BCD and SCM','<p>In mathematics, privided N positive integers,there exists maximum integer which can be divided among those integers without remainder,meanwhile,there exists minmum integer which can divide each of those intergers without remainds.</p>\n<p>In this problem, we define the BCD of an integer series as the largest positive integer that divides every number of that series without remainder. And the SCM of an integer series as the smallest positive integer that is a multiple of every number of the series. &nbsp;</p>\n<p>For example, for the following integer series: &nbsp;</p>\n<p>8 16 12 24 &nbsp;</p>\n<p>We have&nbsp;BCD&nbsp;= 4 and&nbsp;SCM&nbsp;= 48. &nbsp;</p>\n<p>You are given an non-negative integer series, please calculate its&nbsp;BCD&nbsp;and&nbsp;SCM.</p>','<p>The input will consist of a number of non-negative integers, one per line. Proceed to the end of input.</p>','<p>Two integers, the series\' BCD and SCM, separated by a single space. Our input guarantees the correct answer will never exceed&nbsp;<span style=\"font-family: Arial, Helvetica, sans-serif, 宋体; font-size: 14px; background-color: #e8e8ff;\">2</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">63</sup>-1.</p>','8 16 12 24','4\n48','0','','','2016-07-02 14:20:52',1,64,'N',1,1,0),(1004,'Ali Baba and the 40 Robbers','<p class=\"p1\"><span class=\"s1\">One day, Alibaba, as usual, drives his three donkeys to the forest to collect woods. After his hard work, finally he gets enough woods. ?He puts the woods on the back of these donkeys and goes home happily. Just after he goes through a high mountain, he sees a cloud of dust. It seems to have a group of people coming. ?He has been warned that there are a lot of thieves around this area recently. So he ties the donkeys to a tree, hiding himself behind a large rock.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Just a while, these people come, with the horses fully-loaded. Ali Baba don\'t know what\'s in the bags. However, he is sure that they are not to woods. The group has 40 persons. Ali Baba decides to see what makes them to take so many things to the mountains.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">The group of people come to a foot of the mountain. Ali Baba follows them there quietly. He knew that once found he would be killed. Though they speak briefly in a low voice, he is fully aware of the fact that this is a group of robbers and the things are stolen. However, why they took things at the foot of this mountain? Ali Baba decides to continue observing.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">The robber leader go in front of the mountain, says: \"Open, Simsim.\" As a big piece of stone answers and removes. There is a cave.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">The robbers move the things into the cave and then come out. The robber leader says: \"Close, Simsim.\" and the stone move back. The cave disappeared. Then the group of robbers go back.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Ali Baba remember this place and the sentence. Of course, he is very surprised about what has happened.</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Ali Baba decides to take a look at the hidden treasures. He waits until the the robbers go far away, then come to the front of the cave.</span></p>\n<p class=\"p1\"><span class=\"s1\">He has never done such a thing. The legs has begun shaking up. However, he eventually encourages himself and shouts loudly: \"Open, Simsim.\"</span></p>\n<p class=\"p2\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">the stone removes and exposes a black hole. He goes into cave and is shocked by the scene inside. ?This is a very large cave, which is full of valuable gold, silver, jewelry and jade. He has never seen so many treasures in all his life. ?Ali Baba is a bit afraid of the robbers\' returning. So he runs back to the hole. However, Ali Baba thinks, why not take some back, as he has already here?</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">So he throw away all the woods on the dunkeys in order to fill three large bags with treasures inside, and then out of the cave. \"Close, Simsim.\" Ali Baba says. The stone then block the hole.&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">Ali Baba leads the donkey to the forests, covered the treasure with wood in order to avoid any suspicion of oth</span>ers, and then goes home happily.</p>','<p>Each test data has two positive integer N, K (1&le;K&le;N&le;1000), separate by a space character.</p>\n<p>N is number of all drawers;K is number of breaked drawers.</p>','<p>Output the float number of the answer. Accurate to three digits after decimal point.</p>','3 1','0.333','0','','','2016-07-02 14:57:30',1,64,'N',NULL,0,0),(105,'Round Robin Killing','<p>n men stands in a format of circle under the commander that every <span style=\"font-size: 14px;\">m</span><sup style=\"font-family: Arial, Helvetica, sans-serif, 宋体; background-color: #e8e8ff;\">th&nbsp;</sup>man will be executed going around the circle until only one remains, find the position L(n,m) of the circle&nbsp;where&nbsp;you should stand in order to be the last survivor. &nbsp;</p>\n<p>For example, n = 5 and m = 2, we number everyone from 1 to n based on their positions, and the entire process will be as follows:</p>\n<p><img src=\"/data/105/105.png\" alt=\"Josephus\" /></p>\n<p>In this case we should stand at position 3 thus we can escape from being executed. &nbsp;</p>\n<p>&nbsp;</p>\n<p>Now you are given n and m, your task is to write a program to find the position of the last survivor.</p>','<p>Two integers n and m, separated by a single space. (1 &lt;= n, m &lt;= 1000000).</p>','<p>One integer, the position of the last survivor.</p>','5 2','3','0','','','2016-07-02 03:02:40',1,64,'N',1,1,0),(109,'求幂运算','<p>请精确计算 <span style=\"font-size: 16px;\">T</span><sup style=\"font-family: &quot;Times New Roman&quot;, Times, serif;\">n&nbsp;</sup>的值，其中&nbsp;<span style=\"font-family: &quot;Times New Roman&quot;, Times, serif; font-size: 16px;\">&nbsp;0.0 &lt; T &lt; 99.999、 0 &lt; n &lt;= 25</span></p>','<p>输入由两组数组成 T、 n。T占位列数为1到6，n占位列数为8到9</p>','<p>输出每一行为一个<span style=\"font-size: 16px;\">T</span><sup style=\"font-family: &quot;Times New Roman&quot;, Times, serif;\">n</sup>的结果</p>\n<p>如果该数（0&lt;<span style=\"font-size: 16px;\">T</span><sup style=\"font-family: &quot;Times New Roman&quot;, Times, serif;\">n</sup>&lt;1）,小数点前的0省略</p>\n<p>如果该数有小数，小数最后不能以0结尾</p>\n<p>如果该数是整数，末尾不能有小数点&nbsp;</p>','95.123 12\n0.4321 20\n5.1234 15\n6.7592  9\n98.999 10\n1.0100 12','548815620517731830194541.899025343415715973535967221869852721\n.00000005148554641076956121994511276767154838481760200726351203835429763013462401\n43992025569.928573701266488041146654993318703707511666295476720493953024\n29448126.764121021618164430206909037173276672\n90429072743629540498.107596019456651774561044010001\n1.126825030131969720661201','0','<p>判断输入数据结束<span style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\">:&nbsp;</span><br style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\" /><em style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\">s</em><span style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\">&nbsp;is a string and&nbsp;</span><em style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\">n</em><span style=\"font-family: \'Times New Roman\', Times, serif; font-size: 16px;\">&nbsp;is an integer&nbsp;</span></p>\n<pre style=\"font-size: 16px;\"><strong>C++</strong>\n<br />while(cin&gt;&gt;s&gt;&gt;n)\n<br />{\n<br />...\n<br />}\n<br /><strong>c</strong>\n<br />while(scanf(\"%s%d\",s,&amp;n)==2) //to  see if the scanf read in as many items as you want\n<br />/*while(scanf(%s%d\",s,&amp;n)!=EOF) //this also work    */\n<br />{\n<br />...\n<br />}</pre>','','2016-07-02 16:48:40',5,64,'N',1,1,0),(1005,'Knight Payment','<p>The lord&nbsp;pays his knight in gold coins. On the first day of his service, the knight receives one gold coin. On each of the next two days (the second and third days of service), the knight receives two gold coins. On each of the next three days (the fourth, fifth, and sixth days of service), the knight receives three gold coins. On each of the next four days (the seventh, eighth, ninth, and tenth days of service), the knight receives four gold coins. This pattern of payments will continue indefinitely: after receiving N gold coins on each of N consecutive days, the knight will receive N+1 gold coins on each of the next N+1 consecutive days, where N is any positive integer. &nbsp; Your program will determine the total number of gold coins paid to the knight in any given number of days (starting from Day 1).&nbsp;</p>','<p>The input contains at least one, but no more than 21 lines. Each line of the input file (except the last one) contains data for one test case of the problem, consisting of exactly one integer (in the range 1..10000), representing the number of days. The end of the input is signaled by a line containing the number 0.</p>','<p>There is exactly one line of output for each test case. This line contains the number of days from the corresponding line of input, followed by one blank space and the total number of gold coins paid to the knight in the given number of days, starting with Day 1.</p>','10\n6\n7\n11\n15\n16\n100\n10000\n1000\n21\n22\n0','10 30\n6 14\n7 18\n11 35\n15 55\n16 61\n100 945\n10000 942820\n1000 29820\n21 91\n22 98','0','','','2016-07-03 23:58:20',1,64,'N',1,1,0),(1006,'N的个数','<p>计算出最小的K，K由N个连续的数字组成，且能被整数M整除。</p>\n<p>举例，11是最小的由&lsquo;1&rsquo;组成的整数能被11整除，111111是最小的整数能被13整除，由6个&ldquo;1&rdquo;组成。</p>','<p>输入为一行，由两个正整数组成N和M，由空格分隔，M不大于10000</p>','<p>输出一行，为数字N的个数，如果不存在该数，输出0</p>','1 5 \n1 11 \n1 13','0\n2\n6','0','','','2016-07-06 01:40:44',1,64,'N',1,1,0),(110,'简单算术表达式','<p>计算只有加法和乘法两种运算的算术表达式。</p>','<p>输入仅有一行，为需要你计算的表达式，表达式中只包含数字、加法运算符&ldquo;+&rdquo;和乘法运算符&ldquo;*&rdquo;，且没有括号，所有参与运算的数字均为0到2^31-1之间的整数。输入数据保证这一行只有0~ 9、+、*这12种字符。</p>','<p>输出只有一行，包含一个整数，表示这个表达式的值。<strong>注意：当答案长度多于4位时，请只输出最后4位，前导0不输出。</strong></p>','1+1*3+4\n1+1234567890*1\n1+1000000003*1','8\n7891\n4','0','<p>对于30%的数据，0&le;表达式中加法运算符和乘法运算符的总数&le;100；</p>\n<p>对于80%的数据，0&le;表达式中加法运算符和乘法运算符的总数&le;1000；</p>\n<p>对于100%的数据，0&le;表达式中加法运算符和乘法运算符的总数&le;100000</p>','','2016-07-08 01:37:56',1,64,'N',1,1,0),(1008,'末尾淘汰选举 ','<p>&nbsp; &nbsp; &nbsp;&nbsp;该选举要求投票人列出候选人在心中的排名，第一轮计票只会统计每位投票人的第一选择，如果有一位候选人得到50%以上的票数，那么他就当选。如果没有人超过50%，那就淘汰票数最少的候选人，那些原本选择这个候选人的选票，则依照顺位将票投给下一个仍未出局的候选人。这个流程不断的重复(每一次的计票，票数最少的那些候选人都被排除当选)， 或者是所有剩下的候选人得票数相同才停止。&nbsp;</p>','<p>输入第一行为一个正整数N，表示共有N个测试选举，然后一列空白列。输入的第一列有一个整数n (n&lt;=20)代表候选人的个数。接下来的n列每一列依序表示了候选人的名字。这些名字可能长达80个可显示的字符。 &nbsp; 之后会有至多1000列，每一列包含了一张选票的内容。每一张选票都包含了一个1~n的排列，第一个数代表这张选票上的「第一选择」，第二个数字代表第二顺位&hellip;以此类推 &nbsp;&nbsp;</p>\n<p>&nbsp;</p>','<p>任意两块连续的测试选举之间输出一列空白。 &nbsp;</p>\n<p>对每一组测试选举输出赢得选举的候选人名字，或是同时打成平手的所有候选人名字。</p>','1\n3\nJohn Terry\nJane Smith\nMark Hughes\n1 2 3\n2 1 3\n2 3 1\n1 2 3\n3 1 2','John Terry','0','','','2016-07-08 19:38:42',3,64,'N',1,2,0),(1009,'自动判题脚本','<p>OJ 测试评判系统有三种输出结果分别为&ldquo;Accepted&rdquo;, &ldquo;Presentation Error&rdquo; or &ldquo;Wrong Answer&rdquo;. 这三种结果的定义如下:</p>\n<p>Accepted: 程序输出结果和标准答案完全比配，所有的字符、数字必须一一吻合，排列顺序相同。</p>\n<p>Presentation Error: 所有数字字符比配，排列顺序相同。但至少有一个非数字字符不同或排列顺序不同。比如字符串&lsquo;15 0&rsquo;和&lsquo;150&rsquo;属于&nbsp;&lsquo;Presentation Error&rsquo;；而字符串 &lsquo;15 0&rsquo; 和 &lsquo;1 0&rsquo;属于&lsquo;Wrong Answer&rsquo;。</p>\n<p>Wrong Answer: 如果输出结果不属于上述任何一种情况，那么将得到 &lsquo;Wrong Answer&rsquo; 结果。</p>','<p>由任意多组输入构成，每一组输入从一个正整数n（n&lt;100）开始，独占一行，表示有n行标准答案，之后n行输入为标准答案的字符内容。然后是一个正整数m（m&lt;100）独占一行，表示有m行程序执行答案，之后m行输入为程序执行答案的字符内容。输入遇到单独一行 n=0 表示输入结束。</p>\n<p>任何一行不会超过 120 个字符。</p>','<p>对于每一组输入会有一行输出对应：</p>\n<p>Run #x: Accepted</p>\n<p>Run #x: Presentation Error</p>\n<p>Run #x: Wrong Answer</p>\n<p>x表示第x组比对数据 (x从1开始).</p>','2\nThe answer is: 10\nThe answer is: 5\n2\nThe answer is: 10\nThe answer is: 5\n2\nThe answer is: 10\nThe answer is: 5\n2\nThe answer is: 10\nThe answer is: 15\n2\nThe answer is: 10\nThe answer is: 5\n2\nThe answer is: 10\nThe answer is: 5\n3\nInput Set #1: YES\nInput Set #2: NO\nInput Set #3: NO\n3\nInput Set #0: YES\nInput Set #1: NO\nInput Set #2: NO\n1\n1 0 1 0\n1\n1010\n1\nThe judges are mean!\n1\nThe judges are good!\n0','Run #1: Accepted\nRun #2: Wrong Answer\nRun #3: Presentation Error\nRun #4: Wrong Answer\nRun #5: Presentation Error\nRun #6: Presentation Error','0','','','2016-07-09 00:44:45',3,64,'N',1,1,0),(1010,'随机序列转化','<p>&nbsp;</p>\n<div style=\"margin: 0px; padding: 0px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;\">\n<p style=\"margin: 0px 0px 1em !important; padding: 0px; font-size: 1em; line-height: 1.4em;\">小米正在学习一种算法，他非常喜欢玩这种游戏。</p>\n<p style=\"margin: 0px 0px 1em !important; padding: 0px; font-size: 1em; line-height: 1.4em;\">他收到了两组由数字1到n随机排列的序列，要求他把序列一转化到序列二。转化方式为将排在序列最后一位的数字插入到排在前面的序列中，可以插入到序列的最开头，也可以插入到任意连个相连的数字间。</p>\n<p style=\"margin: 0px 0px 1em !important; padding: 0px; font-size: 1em; line-height: 1.4em;\">小米有一个算法能解决这个问题，但不够快，他想知道最少要操作多少步才能将序列一转化为序列二。</p>\n</div>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">第一行为一个正整数&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;2&middot;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">5</span></span>) &mdash; 为每一条序列的数字数。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">接下来第一行为第一个序列， 由<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;个整数组成，每个整数范围在1~n之间，且只出现一次，数字间由空格分开。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">下一行为第二个序列，格式和第一个序列一样。</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">打印出一个正整数n，代表 序列一 至少需要n步操作才能转化为 序列二。</span></p>','3\n3 2 1\n1 2 3','2','0','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">举例如下序列组:</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">1 5 2 3 4</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">1 4 5 2 3</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">1 3 4 5 2</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">1 2 3 4 5</li>\n</ul>\n<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;\">需要操作3步.</span></p>\n<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 21px;\">greedy</span></p>','','2016-07-09 23:21:21',2,256,'N',1,1,0),(1011,'被破译的兽族密码','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">人族取得了和兽族战争的主动权。为了驱逐兽族，人族需要知道还有多少兽族后备军。很幸运，卫士抓住了一个兽族士兵，他有一个加密的消息，人族需要破解。</p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">兽族士兵有一组正整数序列a。人族情报已得知这是克里克code：兽族是用一组仅由a组成的序列破解这个密文，从而得到一个数字m。而在序列a中存在a的一个子序列，这个子序列至少包含k个相同的数字，这种子序列的个数正好等于m。而数字k已是一个被人族破译的数字，所以人族将军需要运行一个程序破解这个a序列。</p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">将军已有的信息为序列&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em></span>&nbsp;和数字&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>k</em></span>, 他要获得a中至少包含k个相同数字的子序列个数</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span class=\"tex-font-style-it\" style=\"font-style: italic;\"><em>a</em>&thinsp;=&thinsp;(<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span>)</span><span class=\"tex-font-style-it\" style=\"font-style: italic;\">的子序列</span><span style=\"line-height: 1.4em;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em>[<em>i</em>...&nbsp;<em>j</em>]&nbsp;(1&thinsp;&le;&thinsp;<em>i</em>&thinsp;&le;&thinsp;<em>j</em>&thinsp;&le;&thinsp;<em>n</em>)</span><span style=\"line-height: 1.4em;\">&nbsp;是一个序列</span><span style=\"line-height: 1.4em;\">, 是由a序列中连续的元素构成, 从&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span><span style=\"line-height: 1.4em;\">-th 个元素开始到第&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>j</em></span><span style=\"line-height: 1.4em;\">-th 个元素结束:&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em>[<em>i</em>...&nbsp;<em>j</em>]&thinsp;=&thinsp;(<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em>&thinsp;+&thinsp;1</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>j</em></span>)</span><span style=\"line-height: 1.4em;\">.</span></p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">输入第一行有两个正整数&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>k</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>k</em>&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;4&middot;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">5</span>) </span>用空格分隔，分别表示序列的元素个数和子序列中需要相同元素的个数</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">相应的，第二行输入则是n个正整数<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span><span style=\"line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span><span style=\"line-height: 19.6px;\">)</span><span style=\"line-height: 1.4em;\">的序列，元素间有空格分隔。</span></p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">输出一行，一个正整数---即至少包含k个相同正整数的子序列个数。</p>','5 3\n1 2 1 1 3','2','0','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">至少包含3个相同数字的子序列为: (1,2,1,1,3) 和 (1,2,1,1)。总共两个。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">two pointers</p>','','2016-07-10 01:31:49',3,256,'N',1,3,0),(111,'Orange Juice','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">凯尔非常喜欢喝橙汁汽水，所以他厨房里的所有食物都含有橙汁汽水成分。在他的冰箱里有n瓶橙汁汽水，每第i-th瓶汽水的橙汁占比<span style=\"line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span><span style=\"line-height: 19.6px;\">&nbsp;%。</span></p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\"><span style=\"line-height: 19.6px;\">一天凯尔准备制作一份橙汁鸡尾酒。他从n瓶汽水中取出相同分量的橙汁汽水并混合，他想知道混合后鸡尾酒里橙汁的占比。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">第一行输入&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;100</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">) &mdash; 冰箱里橙汁汽水的瓶数. 第二行为每瓶汽水橙汁的占比</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">0&thinsp;&le;&thinsp;<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;100</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">) &mdash; 每个数字以空格分隔。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print the volume fraction in percent of orange juice in Vasya\'s cocktail. The answer will be considered correct if the absolute or relative error does not exceed&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">10&thinsp;<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">&thinsp;-&thinsp;4</span></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','4\n0 25 50 75','37.500000000000','0','','','2016-07-11 01:17:52',2,256,'N',1,1,0),(1012,'特殊的矩阵','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">矩阵A是一个N*N的方形矩阵，该矩阵的元素只有0和1，定义第i行，第j列数值为<em>A</em><span class=\"lower-index\"><em>i</em>,&thinsp;<em>j。</em></span></p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">定义矩阵 <span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 17.5px; white-space: nowrap;\"><em>A</em></span></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">是清晰的如果没有相邻的两个矩阵单元都为1&nbsp;</span></span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">定义矩阵<em>A</em>是对称的如果&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px;\"><em>A</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em>,&thinsp;<em>j</em></span>&thinsp;=&thinsp;<em>A</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em>&thinsp;-&thinsp;<em>i</em>&thinsp;+&thinsp;1,&thinsp;<em>j</em></span></span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px;\"><em>A</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em>,&thinsp;<em>j</em></span>&thinsp;=&thinsp;<em>A</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em>,&thinsp;<em>n</em>&thinsp;-&thinsp;<em>j</em>&thinsp;+&thinsp;1</span></span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">定义矩阵A的锋利指数为矩阵中1的个数。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">给定整数x，找出最小整数n，使得n*n矩阵是清晰对称矩阵，且锋利指数为x。</p>','<p>&nbsp;</p>\n<div class=\"input-specification\" style=\"margin: 0px; padding: 0px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;\">\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">输入一行&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em style=\"font-style: italic;\">x</em>&thinsp;&le;&thinsp;100</span>) ，x为矩阵的锋利指数。</p>\n</div>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">输出一个正整数n &mdash; 最小的</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">n*n清晰对称矩阵，且锋利指数为x</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','9','5','0','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">对应的例子:</span></p>\n<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\"><img src=\"data/1012/1012.png\" alt=\"\" /></span></p>\n<p>&nbsp;</p>\n<p>constructive algorithms, dp, math</p>','','2016-07-11 21:38:35',2,256,'N',1,1,0),(1013,'最大对称子序列','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">给定一个字符串s，仅由小写英文字母组成。找到最长字母子序列。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">定义一个非空字符串&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>[<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k</em></span>]</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;=&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k</em></span></span></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;(</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">&thinsp;&le;&thinsp;</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;&lt;&thinsp;<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;&lt;&thinsp;...&thinsp;&lt;&thinsp;<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k</em></span></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">&thinsp;&le;&thinsp;</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>s</em>|</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">) 是字符串&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;=&nbsp;</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\"><em style=\"font-family: &quot;times new roman&quot;, sans-serif; font-size: 17.5px; white-space: nowrap;\">s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span><span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 17.5px; white-space: nowrap;\">...&nbsp;</span></span><em style=\"font-family: &quot;times new roman&quot;, sans-serif; font-size: 17.5px; white-space: nowrap;\">s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>s</em>|</span><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">（</span></span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>s</em>|</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;这个字符串s的长度）的字串。&nbsp;比如字串 \"</span></span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">abcb</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">\", \"</span></span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">b</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">\" 和 \"</span></span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">abacaba</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">\" 是字串 \"</span></span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">abacaba</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">\"的字串。</span></span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">定义字串&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em></span>&nbsp;=&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>x</em>|</span></span>&nbsp;按字母程序大于&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>y</em></span>&nbsp;=&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>y</em>|</span></span>&nbsp;，如果<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>x</em>|</span>&nbsp;&gt;&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>y</em>|</span>&nbsp;且&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>, ...,&thinsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>y</em>|</span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>y</em>|</span></span>, 或者存在一个整数&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em>&thinsp;&lt;&thinsp;|<em>x</em>|</span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em>&thinsp;&lt;&thinsp;|<em>y</em>|</span>) 其中&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>, ...,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em></span>&thinsp;=&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em></span></span>&nbsp;且&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em>&thinsp;&thinsp;+&thinsp;&thinsp;1</span>&thinsp;&gt;&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em>&thinsp;&thinsp;+&thinsp;&thinsp;1</span></span>. 字符的比较按照ASCII码比较规则. 比如，字串\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ranger</span>\" 安字符比较规则大于 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">racecar</span>\" ，而 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">poster</span>\" 大于 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">post</span>\".</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">字串<span class=\"tex-span\" style=\"color: rgb(0, 0, 0); font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em></span><span style=\"color: rgb(0, 0, 0); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;\">&nbsp;=&nbsp;</span><span class=\"tex-span\" style=\"color: rgb(0, 0, 0); font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"color: rgb(0, 0, 0); font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>s</em>|</span></span><span style=\"line-height: 1.4em;\">是一个对称字符串&nbsp;</span><span style=\"line-height: 1.4em;\">&nbsp;，如果 s =&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>rev</em>(<em>s</em>)</span><span style=\"line-height: 1.4em;\">&nbsp;=&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>s</em>|</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>s</em>|&thinsp;-&thinsp;1</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1 </span></span><span style=\"line-height: 1.4em;\">。也就是说，将字符串的排列顺序从右往左颠倒，字符串保持一致，比如，\"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">racecar</span><span style=\"line-height: 1.4em;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">refer</span><span style=\"line-height: 1.4em;\">\" and \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">z</span><span style=\"line-height: 1.4em;\">\"。</span></p>','<p>&nbsp;</p>\n<div class=\"input-specification\" style=\"margin: 0px; padding: 0px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;\">\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">输入一个非空只含英文字母的字符串，字符串长度不超过10。</p>\n</div>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px; line-height: 19.6px;\">输出输入字符串的最大对称子序列。</span></span></p>','radar','rr','0','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">字符串 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">radar</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" 的所有</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">对称子序列</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">: \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">a</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">d</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">r</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">aa</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">rr</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">ada</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">rar</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">rdr</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">raar</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" 和 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">radar</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\". 其中最大字串为 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">rr</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\".</span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px; line-height: 19.6px;\">binary search, bitmasks, brute force, greedy, implementation, strings</span></span></p>','','2016-07-11 22:13:00',2,256,'N',1,1,0),(1014,'埃弗拉的点','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">埃弗拉很喜欢点。最近他母亲给了他n个点，在一条直线OX上。埃弗拉想知道有多少种方法可以取出任意三个不同的点，其中两个距离最远的点相距不超过d。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">三个点的选取顺序与计算过程无关。</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">第一行输入两个正整数:&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;和&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>d</em></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">5</span>;&nbsp;1&thinsp;&le;&thinsp;<em>d</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span>). 下一行包含n个正整数<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span></span>（<span style=\"line-height: 19.6px;\">表示点的x轴坐标），</span><span style=\"line-height: 1.4em;\">他们的绝对值不超过</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span><span style=\"line-height: 1.4em;\">&nbsp;。</span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">所有输入的x坐标值严格递增。</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">输出一个正整数，表示组的数量（三个点为一组，两个最远点的距离不超过d）。</p>','4 3\n1 2 3 4','4','0','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">满足例子的实例有 (1,2,3) &nbsp;(1,2,4) &nbsp;(2,3,4) &nbsp;(1 3 4).</p>\n<p>&nbsp;dp, greedy, number theory</p>','','2016-07-12 00:56:39',2,256,'N',1,3,0),(1015,'Ladder','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">You\'ve got an array, consisting of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span></span>. Also, you\'ve got&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>m</em></span>&nbsp;queries, the&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th query is described by two integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>. Numbers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;define a subsegment of the original array, that is, the sequence of numbers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;+&thinsp;1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;+&thinsp;2</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span></span>. For each query you should check whether the corresponding segment is a ladder.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">A&nbsp;<span class=\"tex-font-style-it\" style=\"font-style: italic;\">ladder</span>&nbsp;is a sequence of integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k</em></span></span>, such that it first doesn\'t decrease, then doesn\'t increase. In other words, there is such integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>x</em>&thinsp;&le;&thinsp;<em>k</em>)</span>, that the following inequation fulfills:&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;&le;&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;&le;&thinsp;...&thinsp;&le;&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>x</em></span>&thinsp;&ge;&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>x</em>&thinsp;+&thinsp;1</span>&thinsp;&ge;&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>x</em>&thinsp;+&thinsp;2</span>...&thinsp;&ge;&thinsp;<em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k</em></span></span>. Note that the non-decreasing and the non-increasing sequences are also considered ladders.</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The first line contains two integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>m</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>n</em>,&thinsp;<em>m</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">5</span>)</span>&nbsp;&mdash; the number of array elements and the number of queries. The second line contains the sequence of integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span>), where number&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;stands for the&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th array element.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The following&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>m</em></span>&nbsp;lines contain the description of the queries. The&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th line contains the description of the&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th query, consisting of two integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;<em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;<em>n</em>)</span>&nbsp;&mdash; the boundaries of the subsegment of the initial array.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The numbers in the lines are separated by single spaces.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>m</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;lines, in the&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>i</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">-th line print word \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">Yes</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" (without the quotes), if the subsegment that corresponds to the&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>i</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">-th query is the ladder, or word \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">No</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" (without the quotes) otherwise.</span></p>','8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8','Yes\nYes\nNo\nYes\nNo\nYes','0','<p>dp,&nbsp;implementation,&nbsp;two pointers</p>','c 279','2016-07-13 18:56:18',2,256,'Y',NULL,0,0),(1016,'Beautiful Decomposition','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Valera considers a number&nbsp;<span class=\"tex-font-style-it\" style=\"font-style: italic;\">beautiful</span>, if it equals&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">2<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\"><em>k</em></span></span>&nbsp;or -<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">2<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\"><em>k</em></span></span>&nbsp;for some integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>k</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>k</em>&thinsp;&ge;&thinsp;0)</span>. Recently, the math teacher asked Valera to represent number&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;as the sum of beautiful numbers. As Valera is really greedy, he wants to complete the task using as few beautiful numbers as possible.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Help Valera and find, how many numbers he is going to need. In other words, if you look at all decompositions of the number&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;into beautiful summands, you need to find the size of the decomposition which has the fewest summands.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">The first line contains string&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>s</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(1&thinsp;&le;&thinsp;|<em>s</em>|&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">6</span>)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">, that is the binary representation of number&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;without leading zeroes&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(<em>n</em>&thinsp;&gt;&thinsp;0)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print a single integer &mdash; the minimum amount of beautiful numbers that give a total of&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','111','2','0','<p><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">In the sample&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap; color: rgb(34, 34, 34); line-height: 19.6px;\"><em>n</em>&thinsp;=&thinsp;7</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;and Valera can decompose it into sum&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap; color: rgb(34, 34, 34); line-height: 19.6px;\">2<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">3</span>&thinsp;+&thinsp;(&thinsp;-&thinsp;2<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">0</span>)</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>\n<p>games,greedy</p>','E 279','2016-07-13 19:29:03',2,256,'Y',NULL,0,0),(1017,'Bit++','<p>&nbsp;</p>\n<div style=\"margin: 0px; padding: 0px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;\">\n<p style=\"margin: 0px 0px 1em !important; padding: 0px; font-size: 1em; line-height: 1.4em;\">The classic programming language of Bitland is Bit++. This language is so peculiar and complicated.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">The language is that peculiar as it has exactly one variable, called&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>. Also, there are two operations:</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style: disc outside; font-size: 1em; line-height: 1.5em;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">Operation&nbsp;<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">++</span>&nbsp;increases the value of variable&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>&nbsp;by 1.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">Operation&nbsp;<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">--</span>&nbsp;decreases the value of variable&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>&nbsp;by 1.</li>\n</ul>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">A statement in language Bit++ is a sequence, consisting of exactly one operation and one variable&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>. The statement is written without spaces, that is, it can only contain characters \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">+</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">-</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">X</span>\". Executing a statement means applying the operation it contains.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">A programme in Bit++ is a sequence of statements, each of them needs to be executed. Executing a programme means executing all the statements it contains.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">You\'re given a programme in language Bit++. The initial value of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em style=\"font-style: italic;\">x</em></span>&nbsp;is&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0</span>. Execute the programme and find its final value (the value of the variable when this programme is executed).</p>\n</div>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The first line contains a single integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;150)</span>&nbsp;&mdash; the number of statements in the programme.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Next&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;lines contain a statement each. Each statement contains exactly one operation (<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">++</span>&nbsp;or&nbsp;<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">--</span>) and exactly one variable&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em></span>&nbsp;(denoted as letter &laquo;<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">X</span>&raquo;). Thus, there are no empty statements. The operation and the variable can be written in any order.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print a single integer &mdash; the final value of&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>x</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','2\nX++\n--X','0','0','<p>implementation</p>','A 282','2016-07-13 19:40:42',2,256,'Y',NULL,0,0),(1018,'保罗的字符串','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">小保罗喜欢字符串，尤其喜欢长度为n的字符串。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">一天他想找到一个满足如下条件的字符串:</p>\n<ol style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">字符串由长度为n的小写字母组成，其中k个字母是不同的。</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">不存在两个相邻的字符串相同; 如果一个字符串&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>&thinsp;=&thinsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span></span>, 那么,<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&ne;&thinsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em>&thinsp;+&thinsp;1</span>(1&thinsp;&le;&thinsp;<em>i</em>&thinsp;&lt;&thinsp;<em>n</em>)</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">满足条件1和2,取其中字母顺序排序最小的一个字符串。&nbsp;</li>\n</ol>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"line-height: 19.6px;\"><span style=\"line-height: 21px;\">字母顺序排序规则为：</span>定义字串&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em></span><span style=\"line-height: 19.6px;\">&nbsp;=&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em style=\"box-sizing: border-box;\">x</em>|</span></span><span style=\"line-height: 19.6px;\">&nbsp;按字母程序大于&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">y</em></span><span style=\"line-height: 19.6px;\">&nbsp;=&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em style=\"box-sizing: border-box;\">y</em>|</span></span><span style=\"line-height: 19.6px;\">&nbsp;，如果</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\">|<em style=\"box-sizing: border-box;\">x</em>|</span><span style=\"line-height: 19.6px;\">&nbsp;&gt;&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\">|<em style=\"box-sizing: border-box;\">y</em>|</span><span style=\"line-height: 19.6px;\">&nbsp;且&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span style=\"line-height: 19.6px;\">,&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span><span style=\"line-height: 19.6px;\">, ...,&thinsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em style=\"box-sizing: border-box;\">y</em>|</span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em style=\"box-sizing: border-box;\">y</em>|</span></span><span style=\"line-height: 19.6px;\">, 或者存在一个整数&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">r</em></span><span style=\"line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">r</em>&thinsp;&lt;&thinsp;|<em style=\"box-sizing: border-box;\">x</em>|</span><span style=\"line-height: 19.6px;\">,&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">r</em>&thinsp;&lt;&thinsp;|<em style=\"box-sizing: border-box;\">y</em>|</span><span style=\"line-height: 19.6px;\">) 其中&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span><span style=\"line-height: 19.6px;\">,&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span><span style=\"line-height: 19.6px;\">, ...,&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em style=\"box-sizing: border-box;\">r</em></span>&thinsp;=&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em style=\"box-sizing: border-box;\">r</em></span></span><span style=\"line-height: 19.6px;\">&nbsp;且&nbsp;</span><span class=\"tex-span\" style=\"box-sizing: border-box; line-height: 19.6px; font-size: 17.5px;\"><em style=\"box-sizing: border-box;\">x</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em style=\"box-sizing: border-box;\">r</em>&thinsp;&thinsp;+&thinsp;&thinsp;1</span>&thinsp;&gt;&thinsp;<em style=\"box-sizing: border-box;\">y</em><span class=\"lower-index\" style=\"box-sizing: border-box; font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em style=\"box-sizing: border-box;\">r</em>&thinsp;&thinsp;+&thinsp;&thinsp;1</span></span><span style=\"line-height: 19.6px;\">. 字符的比较按照ASCII码规则比较。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">第一行输入两个正整数&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;和&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>k</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">6</span>,&thinsp;1&thinsp;&le;&thinsp;<em>k</em>&thinsp;&le;&thinsp;26)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;&mdash; 分别代表字符串的长度和不同字符的个数。</span></p>','<p>&nbsp;</p>\n<div class=\"output-specification\" style=\"margin: 0px 0px 1em; padding: 0px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;\">\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 1em; line-height: 1.4em;\">输出一行符合要求的字符串；如果不存在输出 -1。</p>\n</div>','7 4','ababacd','0','<p>greedy</p>','','2016-07-13 19:53:31',2,256,'N',1,2,0),(1025,'村子里的房子','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">保罗喜欢他的村庄，村庄有n幢房子，分别标记为1~n。Little penguin Polo loves his home village. The village has&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;houses, indexed by integers from 1 to&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>. 每个房子有一个信箱，信箱里存放一个整数<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;<em>n</em></span>).</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">保罗喜欢绕着村庄走，先走方式为，假设首先站在房子x，然后走到x信箱中整数指向的下一个房子<span style=\"line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>x，</em></span></span><span style=\"line-height: 1.4em;\">然后再是下一个房子</span><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 9.84375px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>x</em></span></span><span style=\"line-height: 1.4em;\">，以此类推。</span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">定义规则:</p>\n<ol style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">当保罗从第1到k幢房子（包含1和K）开始走起，他能走回第一幢房子。</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">当保罗从第k+1到n幢房子（包含k+1和n）开始走起，他一定不能走回第一幢房子。</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">当保罗从第一幢房子开始走起，他一定能通过非0步行走走回第一幢房子。</li>\n</ol>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">他需要算出有多少种行走方式能够满足上述定义的规则，打印出行走方式的数量除<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1000000007</span><span style=\"line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span>&thinsp;+&thinsp;7)</span><span style=\"line-height: 1.4em;\">的余数。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">第一行是两个正整数</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;和&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>k</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;1000,&thinsp;1&thinsp;&le;&thinsp;<em>k</em>&thinsp;&le;&thinsp;<em>min</em>(8,&thinsp;<em>n</em>)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">) 用空格分离-----分别代表房屋数量和根据定义的k。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">输出一个正整数-----实际答案模(mod)</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1000000007</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span>&thinsp;+&thinsp;7)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">的结果。</span></p>','7 4','1728','0','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">combinatorics</span></p>','','2016-07-13 21:35:22',2,256,'N',1,1,0),(1019,'无聊的游戏','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">克鲁伊夫，安德鲁，约瑟夫 可以连续喜欢玩立方体游戏。这个游戏是三个人玩的，当约瑟夫不在时，<span style=\"line-height: 19.6px;\">克鲁伊夫和安德鲁完另一种游戏。</span></p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\"><span style=\"line-height: 19.6px;\">约瑟夫留给他俩一句话，这两句话由&ldquo;0&rdquo;或&ldquo;1&rdquo;组成，长度为</span><span style=\"color: #000000;\">2&middot;</span><em style=\"color: #000000;\">n</em><span style=\"line-height: 19.6px;\">。</span><span style=\"line-height: 19.6px;\">克鲁伊夫是先手，安德鲁是后手。每一手操作规则如下，一个玩家选择1到2*n之间的一个整数，而且这个数之前没有被选过，然后玩家记录下话中该正整数位置对应的值。</span></p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">假设克鲁伊夫的话是</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>&thinsp;=&thinsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2<em>n</em></span></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">. 同样安德鲁的话为</span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em><span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 17.5px;\">&thinsp;=&thinsp;</span></span><em>t</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><em>t</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span><span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 17.5px;\">...&nbsp;</span></span><em>t</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 13.125px;\">2</span></span><em><span style=\"font-family: \'times new roman\', sans-serif;\"><span style=\"font-size: 13.125px;\">n</span></span><span style=\"font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\"><span style=\"font-size: 14px;\">&nbsp;</span></span></em></span></span><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; color: #000000;\">。</span><span>如果克鲁伊夫选择k位置的值, 那么他就记下</span><span>&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>k；</em></span></span><span>同样安德鲁选择r，那么他就记下</span><span>&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em></span></span><span>&nbsp;</span><span>。</span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">当没有玩家能够进行下一步操作时，游戏结束。游戏结束后克鲁伊夫拿出部分记录下的0、1字符，并且可以随意组合，安德鲁也是。结果数字可以是0开头。数字结果是谁能组成较大的数谁就获胜，如果最大的数相等那么就是平局。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">给到两个字符串&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;和&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>. 假设克鲁伊夫和安德鲁都是最佳的玩家，请算出游戏结果。</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">第一行输入正整数&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">6</span></span>). 第二行是克鲁伊夫的话&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;。第三行是约瑟夫的话&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>&nbsp;。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">保证每句话话都是2&middot;<em>n</em>长度，且仅由\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">0</span>\" 和 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">1</span>\"组成。</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">两个玩家都玩得足够的好，打印 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">First</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\", 如果克鲁伊夫获胜，打印\"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">Second</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" 如果安德鲁获胜，打印\"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">Draw</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\"如果游戏平局。输出中没有引号。</span></p>','3\n110110\n001001','First','0','<p>games、greedy</p>','','2016-07-13 23:32:43',2,256,'N',1,1,0),(1020,'Array','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Vitaly has an array of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;distinct integers. Vitaly wants to divide this array into three&nbsp;<span class=\"tex-font-style-bf\" style=\"font-weight: bold;\">non-empty</span>&nbsp;sets so as the following conditions hold:</p>\n<ol style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The product of all numbers in the first set is less than zero&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(&thinsp;&lt;&thinsp;0)</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The product of all numbers in the second set is greater than zero&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(&thinsp;&gt;&thinsp;0)</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The product of all numbers in the third set is equal to zero.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">Each number from the initial array must occur in exactly one set.</li>\n</ol>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Help Vitaly. Divide the given array.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">The first line of the input contains integer&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(3&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;100)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">. The second line contains&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;space-separated distinct integers&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;...,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>n</em></span></span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(|<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">3</span>)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;&mdash; the array elements.</span></p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">In the first line print integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>&thinsp;&gt;&thinsp;0)</span>&nbsp;&mdash; the number of elements in the first set. Then print&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>&nbsp;numbers &mdash; the elements that got to the first set.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">In the next line print integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>&thinsp;&gt;&thinsp;0)</span>&nbsp;&mdash; the number of elements in the second set. Then print&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>&nbsp;numbers &mdash; the elements that got to the second set.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">In the next line print integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">3</span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">3</span>&thinsp;&gt;&thinsp;0)</span>&nbsp;&mdash; the number of elements in the third set. Then print&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">3</span></span>&nbsp;numbers &mdash; the elements that got to the third set.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The printed sets must meet the described conditions. It is guaranteed that the solution exists. If there are several solutions, you are allowed to print any of them.</p>','4\n-1 -2 -3 0','1 -1\n2 -3 -2\n1 0','1','<p>&nbsp;A300</p>\n<p class=\"p1\"><span class=\"s1\">brute force, constructive algorithms, implementation</span></p>','','2016-07-14 00:40:13',2,256,'Y',NULL,0,0),(1021,'Yaroslav and Sequence','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Yaroslav has an array, consisting of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(2&middot;<em>n</em>&thinsp;-&thinsp;1)</span>&nbsp;integers. In a single operation Yaroslav can change the sign of exactly&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;elements in the array. In other words, in one operation Yaroslav can select exactly&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;array elements, and multiply each of them by -1.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Yaroslav is now wondering: what maximum sum of array elements can be obtained if it is allowed to perform any number of described operations?</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Help Yaroslav.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">The first line contains an integer&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(2&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;100)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">. The second line contains&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">(2&middot;<em>n</em>&thinsp;-&thinsp;1)</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;integers &mdash; the array elements. The array elements do not exceed&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1000</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;in their absolute value.</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">In a single line print the answer to the problem &mdash; the maximum sum that Yaroslav can get.</span></p>','2\n50 50 50','150','0','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">In the first sample you do not need to change anything. The sum of elements equals&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">150</span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">In the second sample you need to change the sign of the first two elements. Then we get the sum of the elements equal to&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">100</span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">constructive algorithms</span></p>','C 301','2016-07-14 00:58:22',2,256,'Y',NULL,0,0),(1022,'The Closest Pair','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Currently Tiny is learning Computational Geometry. When trying to solve a problem called \"The Closest Pair Of Points In The Plane\", he found that a code which gave a wrong time complexity got Accepted instead of Time Limit Exceeded.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The problem is the follows. Given&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;points in the plane, find a pair of points between which the distance is minimized. Distance between<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>)</span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>)</span>&nbsp;is&nbsp;<img src=\"data/1022/1022.png\" alt=\"\" />.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The pseudo code of the unexpected code is as follows:</p>\n<pre style=\"margin-top: 1.5em; margin-bottom: 0px; padding: 0px; font-size: 14px; font-family: Consolas, \'Lucida Console\', \'Andale Mono\', \'Bitstream Vera Sans Mono\', \'Courier New\', Courier; line-height: 21px; white-space: pre-wrap; word-wrap: break-word; color: #880000;\"><br />input n<br />for i from 1 to n<br />    input the i-th point\'s coordinates into p[i]<br />sort array p[] by increasing of x coordinate first and increasing of y coordinate second<br />d=INF        //here INF is a number big enough<br />tot=0<br />for i from 1 to n<br />    for j from (i+1) to n<br />        ++tot<br />        if (p[j].x-p[i].x&gt;=d) then break    //notice that \"break\" is only to be<br />                                            //out of the loop \"for j\"<br />        d=min(d,distance(p[i],p[j]))<br />output d</pre>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Here,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>tot</em></span>&nbsp;can be regarded as the running time of the code. Due to the fact that a computer can only run a limited number of operations per second,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>tot</em></span>&nbsp;should not be more than&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>k</em></span>&nbsp;in order not to get Time Limit Exceeded.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">You are a great hacker. Would you please help Tiny generate a test data and let the code get Time Limit Exceeded?</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">A single line which contains two space-separated integers&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>n</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;and&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>k</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">2&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;2000</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">,&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1&thinsp;&le;&thinsp;<em>k</em>&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">).</span></p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">If there doesn\'t exist such a data which let the given code get TLE, print \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">no solution</span>\" (without quotes); else print&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;lines, and the&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th line contains two integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(|<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|,&thinsp;|<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span>)</span>&nbsp;representing the coordinates of the&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th point.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The conditions below must be held:</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">All the points must be distinct.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>x</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|,&thinsp;|<em>y</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">9</span></span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">After running the given code, the value of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>tot</em></span>&nbsp;should be larger than&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>k</em></span>.</li>\n</ul>','4 3','0 0\n0 1\n1 0\n1 1','0','<p>&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">A 311</span></p>\n<p class=\"p1\"><span class=\"s1\">constructive algorithms, implementation</span></p>','','2016-07-15 00:04:06',2,256,'Y',NULL,0,0),(1023,'杰拉德相等字串','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">杰拉德定义了一种新的字符串相等的概念。两个长度相等的字符串a和b如果相等，那么需要满足任意一个如下条件:</p>\n<ol style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">两个字符串完全相等。</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">如果把字符串a分割成两部分a1和a2，把字符串b分割成b1和b2，满足任意一个如下条件：<ol style=\"margin: 0px 0px 0px 1em; padding: 0px; list-style: lower-latin outside; font-size: 1em; line-height: 1.5em;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>&nbsp;= &nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>, 并且&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>&nbsp;=&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span></li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span>&nbsp;=&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>, 并且&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span></span>&nbsp;=&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>b</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span></span></li>\n</ol></li>\n</ol>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">现在杰拉德给出两个字符串，需要判断这两个字符串是否相等。</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">输入为两行长度相等的字符串，每个字符串的长度为1到 200 000，并且字符串由英文小写字母组成。</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">输出 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">YES</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" (没有引号), 如果两个字符串相等，输出 \"</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace; color: #222222; line-height: 19.6px;\">NO</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">\" (没有引号)。</span></p>','aaba\nabaa','YES','0','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">第一个字符串aaba分割成 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">aa</span>\" 和 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ba</span>\", 第二个字符串分割成 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ab</span>\" 和 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">aa</span>\". \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">aa</span>\"= \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">aa</span>\"; \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ab</span>\" =&nbsp;\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ba</span>\" 因为 \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ab</span>\" = \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">a</span>\" + \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">b</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ba</span>\" = \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">b</span>\" + \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">a</span>\"。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">所以aaba和abaa相等。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">divide and conquer, hashing, sortings, strings</span></p>','','2016-07-15 00:44:37',2,256,'N',1,1,0),(1024,'索普的六边形','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">索普在生日那天得到一个特殊的六边形。他发现这个六边形每个内角都为120度. 他量了一下六边形每条边，发现每条边的长度都是整数（厘米）。</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">索普开始在六边形里画线，这些线都平行于六边形的边，这些线能组成边长为1厘米的正三角形将六边形完全分割。现在索普想知道一共有多少个正三角形，完全分割六边形。</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">第一行输入6个正整数，由空格分割</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">3</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">4</span>,&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">5</span></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;和&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">6</span></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&nbsp;(</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\">1&thinsp;&le;&thinsp;<em>a</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;1000</span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">) &mdash; 代表六边形按顺时针读取的每条边的长度，输入能够保证这些长度能够构成六边形</span></p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">打印出一个正整数，代表六边形中边长为1厘米的正三角形的个数。</span></p>','1 2 1 2 1 2','13','0','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">实例分割图如下:</span></p>\n<p><img src=\"/data/1024/1024.png\" alt=\"\" />&nbsp;</p>\n<p>&nbsp;</p>\n<p>brute force,geometry,math</p>','','2016-07-16 17:15:48',2,256,'N',1,1,0),(10001,'Good Substrings','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Smart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>. To determine if a string is good or not the game uses rules. Overall there are&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;rules. Each rule is described by a group of three<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>p</em>,&thinsp;<em>l</em>,&thinsp;<em>r</em>)</span>, where&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;is a string and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em></span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>l</em>&thinsp;&le;&thinsp;<em>r</em>)</span>&nbsp;are integers. We&rsquo;ll say that string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>&nbsp;complies with rule&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(<em>p</em>,&thinsp;<em>l</em>,&thinsp;<em>r</em>)</span>, if the number of occurrences of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>&nbsp;in string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;lies between&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em></span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>r</em></span>, inclusive. For example, string \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ab</span>\", complies with rules (\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">ab</span>\",&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1</span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">2</span>) and (\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">aab</span>\",&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0</span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1</span>), but does not comply with rules (\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">cd</span>\",&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1</span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">2</span>) and (\"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">abab</span>\",&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0</span>,&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">1</span>).</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">A&nbsp;<span class=\"tex-font-style-it\" style=\"font-style: italic;\">substring</span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>[<em>l</em>...&nbsp;<em>r</em>]</span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>l</em>&thinsp;&le;&thinsp;<em>r</em>&thinsp;&le;&thinsp;|<em>s</em>|)</span>&nbsp;of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>&thinsp;=&thinsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">|<em>s</em>|</span></span>&nbsp;(<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">|<em>s</em>|</span>&nbsp;is a length of&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>) is string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>l</em></span><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>l</em>&thinsp;+&thinsp;1</span>...&nbsp;<em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>r</em></span></span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">Consider a&nbsp;<span class=\"tex-font-style-it\" style=\"font-style: italic;\">number of occurrences&nbsp;</span>of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>&nbsp;in string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;as a number of pairs of integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>l</em>,&thinsp;<em>r</em></span>&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">(1&thinsp;&le;&thinsp;<em>l</em>&thinsp;&le;&thinsp;<em>r</em>&thinsp;&le;&thinsp;|<em>p</em>|)</span>&nbsp;such that&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em>[<em>l</em>...&nbsp;<em>r</em>]&thinsp;=&thinsp;<em>t</em></span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">We&rsquo;ll say that string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>t</em></span>&nbsp;is good if it complies with all&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>. Two substrings&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>[<em>x</em>...&nbsp;<em>y</em>]</span>&nbsp;and&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>[<em>z</em>...&nbsp;<em>w</em>]</span>&nbsp;are cosidered to be distinct iff&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em>[<em>x</em>...&nbsp;<em>y</em>]&thinsp;&ne;&thinsp;<em>s</em>[<em>z</em>...&nbsp;<em>w</em>]</span>.</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The first line contains string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>. The second line contains integer&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>. Next&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>n</em></span>&nbsp;lines contain the rules, one per line. Each of these lines contains a string and two integers&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>,&thinsp;<em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>, separated by single spaces (<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0&thinsp;&le;&thinsp;<em>l</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;<em>r</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>&thinsp;&le;&thinsp;|<em>p</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span>|</span>). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The input limits for scoring 30 points are (subproblem G1):</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;and the maximum length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;is&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">&thinsp;&le;&thinsp;200</span>.</li>\n</ul>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The input limits for scoring 70 points are (subproblems G1+G2):</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;and the maximum length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;is&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">&thinsp;&le;&thinsp;2000</span>.</li>\n</ul>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The input limits for scoring 100 points are (subproblems G1+G2+G3):</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0&thinsp;&le;&thinsp;<em>n</em>&thinsp;&le;&thinsp;10</span>.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;and the maximum length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>p</em></span>&nbsp;is&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">&thinsp;&le;&thinsp;50000</span>.</li>\n</ul>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print a single integer &mdash; the number of good substrings of string&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap; color: #222222; line-height: 19.6px;\"><em>s</em></span><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">.</span></p>','ltntlnen\n3\nn 0 0\nttlneenl 1 4\nlelllt 1 1','2','0','<p><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">In the second test only substrings &laquo;</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: &quot;courier new&quot;, monospace; color: rgb(34, 34, 34); line-height: 19.6px;\">e</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&raquo; and &laquo;</span><span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: &quot;courier new&quot;, monospace; color: rgb(34, 34, 34); line-height: 19.6px;\">t</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">&raquo; are good.</span></p>\n<p><span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">string suffix structures</span></p>','','2016-07-17 02:17:12',4,256,'Y',NULL,0,0),(10004,'维多利亚和她的鞋子','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">维多利亚是个非常爱美的女孩子，尤其对鞋子非常热衷，她的家里藏了很多鞋子。最近她突然觉得不光外表要美丽，家中专门放鞋的房间也要整洁。她决定周一清晨整理所有的鞋子。但是房间里的鞋子太多，她完全无法在短时间里把属于一对的鞋子整理到一起，迫于有限的学识，她无法知道最少需要整理多少个鞋子才能将房间整理完全。</p>\n<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">房间是的构造是矩形的，并且被分割成了<em style=\"font-size: 17.5px; line-height: 19.6px;\">n</em><span style=\"font-size: 17.5px; line-height: 19.6px;\">&thinsp;&times;&thinsp;</span><em style=\"font-size: 17.5px; line-height: 19.6px;\">m</em><span style=\"line-height: 19.6px;\">个大小相等的矩形，每个矩形放了一个鞋子。每一双鞋子有一个唯一的正整数标示从</span><span class=\"tex-span\" style=\"font-size: 17.5px;\">1</span><span style=\"line-height: 19.6px;\">&nbsp;到 (n*m)/2,也就是说，每一个矩形用坐标</span><span style=\"line-height: 19.6px;\">&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px;\">(<em>i</em>,&thinsp;<em>j</em>)</span><span style=\"line-height: 19.6px;\">表示，这个坐标对应的值为鞋子的正整数唯一标示号。</span><span style=\"line-height: 19.6px;\">维多利亚相信只要把所有标示号相同的鞋子能够相邻的摆放到一起，那么房间整理就完成了。我们假设两个矩形</span><span class=\"tex-span\" style=\"font-size: 17.5px;\">(<em>i</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>,&thinsp;<em>j</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span>)</span><span style=\"line-height: 19.6px;\">&nbsp;和&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px;\">(<em>i</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>,&thinsp;<em>j</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span>)</span><span style=\"line-height: 19.6px;\">是相邻的，如果</span><span style=\"font-size: 17.5px; line-height: 19.6px;\">|</span><em style=\"font-size: 17.5px; line-height: 19.6px;\">i</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><span style=\"font-size: 17.5px; line-height: 19.6px;\">&thinsp;-&thinsp;</span><em style=\"font-size: 17.5px; line-height: 19.6px;\">i</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span><span style=\"font-size: 17.5px; line-height: 19.6px;\">|&thinsp;+&thinsp;|</span><em style=\"font-size: 17.5px; line-height: 19.6px;\">j</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">1</span><span style=\"font-size: 17.5px; line-height: 19.6px;\">&thinsp;-&thinsp;</span><em style=\"font-size: 17.5px; line-height: 19.6px;\">j</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\">2</span><span style=\"font-size: 17.5px; line-height: 19.6px;\">|&thinsp;=&thinsp;1。</span></p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">输入第一行为两个正整数用<span class=\"tex-span\" style=\"font-size: 17.5px;\"><em>n</em></span><span style=\"line-height: 19.6px;\">&nbsp;and&nbsp;</span><span class=\"tex-span\" style=\"font-size: 17.5px;\"><em>m</em></span><span style=\"line-height: 1.4em;\">空格分隔，对应房间的大小。接下来是n行每行m个空格分隔的正整数，每个正整数代表一双唯一的鞋子的编号。</span></p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222;\">输入保证:</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\"><span class=\"tex-span\" style=\"font-size: 17.5px;\"><em>n</em>&middot;<em>m</em></span>&nbsp;是偶数。</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">所有的数字表示房间里每一双唯一的鞋子的标识号，从&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px;\">1</span>&nbsp;到&nbsp;<span style=\"line-height: 19.6px;\">&nbsp;(n*m)/2。</span></li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">每个从&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px;\">1</span>&nbsp;到&nbsp;<span style=\"line-height: 19.6px;\">&nbsp;(n*m)/2 的数字出现两次。</span></li>\n</ul>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">输出一个正整数，表示最少需要移动位置的鞋子数。</span></p>','3 4\n1 3 2 6\n2 1 5 6\n4 4 5 3','4','0','<p><img src=\"/data/10004/10004.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>flows、graph matchings</p>','','2016-07-17 12:22:24',8,256,'N',5,6,0),(10014,'Special Task','<p style=\"padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; margin: 0px 0px 1em !important;\">Special Agent Smart Beaver works in a secret research department of ABBYY. He\'s been working there for a long time and is satisfied with his job, as it allows him to eat out in the best restaurants and order the most expensive and exotic wood types there.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">The content special agent has got an important task: to get the latest research by British scientists on the English Language. These developments are encoded and stored in a large safe. The Beaver\'s teeth are strong enough, so the authorities assured that upon arriving at the place the beaver won\'t have any problems with opening the safe.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">And he finishes his aspen sprig and leaves for this important task. Of course, the Beaver arrived at the location without any problems, but alas. He can\'t open the safe with his strong and big teeth. At this point, the Smart Beaver get a call from the headquarters and learns that opening the safe with the teeth is not necessary, as a reliable source has sent the following information: the safe code consists of digits and has no leading zeroes. There also is a special hint, which can be used to open the safe. The hint is string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;with the following structure:</p>\n<ul style=\"margin: 0.5em 0px 0px 1em; padding: 0px; list-style-position: outside; font-size: 14px; line-height: 21px; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">if&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;= \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">?</span>\", then the digit that goes&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>-th in the safe code can be anything (between&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0</span>&nbsp;to&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">9</span>, inclusively);</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">if&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;is a digit (between&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">0</span>&nbsp;to&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\">9</span>, inclusively), then it means that there is digit&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>s</em><span class=\"lower-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; bottom: -0.25em;\"><em>i</em></span></span>&nbsp;on position&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: \'times new roman\', sans-serif; white-space: nowrap;\"><em>i</em></span>&nbsp;in code;</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">if the string contains letters from \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">A</span>\" to \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">J</span>\", then all positions with the same letters must contain the same digits and the positions with distinct letters must contain distinct digits.</li>\n<li style=\"margin: 0px 0px 0px 0.8em; padding: 0px; line-height: 1.5em; font-size: 1em;\">The length of the safe code coincides with the length of the hint.</li>\n</ul>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">For example, hint \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">?JGJ9</span>\" has such matching safe code variants: \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">51919</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">55959</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">12329</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">93539</span>\" and so on, and has wrong variants such as: \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">56669</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">00111</span>\", \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">03539</span>\" and \"<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: \'courier new\', monospace;\">13666</span>\".</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">After receiving such information, the authorities change the plan and ask the special agents to work quietly and gently and not to try to open the safe by mechanical means, and try to find the password using the given hint.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;\">At a special agent school the Smart Beaver was the fastest in his platoon finding codes for such safes, but now he is not in that shape: the years take their toll ... Help him to determine the number of possible variants of the code to the safe, matching the given hint. After receiving this information, and knowing his own speed of entering codes, the Smart Beaver will be able to determine whether he will have time for tonight\'s show \"Beavers are on the trail\" on his favorite TV channel, or he should work for a sleepless night...</p>','<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\">The first line contains string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;&mdash; the hint to the safe code. String&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;consists of the following characters:&nbsp;<span class=\"tex-font-style-tt\" style=\"font-size: 15.4px; font-family: &quot;courier new&quot;, monospace;\">?, 0-9, A-J</span>. It is guaranteed that the first character of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em></span>&nbsp;doesn\'t equal to character&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\">0</span>. &nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\">1&thinsp;&le;&thinsp;|<em>s</em>|&thinsp;&le;&thinsp;10<span class=\"upper-index\" style=\"font-size: 13.125px; line-height: 0; position: relative; vertical-align: baseline; top: -0.5em;\">5</span></span>.</p>\n<p style=\"margin: 1.5em 0px 0px; padding: 0px; font-size: 14px; line-height: 1.4em; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\">Here&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\">|<em>s</em>|</span>&nbsp;means the length of string&nbsp;<span class=\"tex-span\" style=\"font-size: 17.5px; font-family: &quot;times new roman&quot;, sans-serif; white-space: nowrap;\"><em>s</em></span>.</p>','<p><span style=\"color: #222222; font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px;\">Print the number of codes that match the given hint.</span></p>','1?AA','100','0','<p>math</p>','','2016-07-18 00:43:37',1,256,'N',1,1,0);
/*!40000 ALTER TABLE `problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `reply`
--

DROP TABLE IF EXISTS `reply`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reply` (
  `rid` int(11) NOT NULL AUTO_INCREMENT,
  `author_id` varchar(48) NOT NULL,
  `time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `content` text NOT NULL,
  `topic_id` int(11) NOT NULL,
  `status` int(2) NOT NULL DEFAULT '0',
  `ip` varchar(30) NOT NULL,
  PRIMARY KEY (`rid`),
  KEY `author_id` (`author_id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `reply`
--

LOCK TABLES `reply` WRITE;
/*!40000 ALTER TABLE `reply` DISABLE KEYS */;
INSERT INTO `reply` VALUES (1,'admin','2016-07-09 22:02:23','nothing',1,0,'211.161.247.219');
/*!40000 ALTER TABLE `reply` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `runtimeinfo`
--

DROP TABLE IF EXISTS `runtimeinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `runtimeinfo` (
  `solution_id` int(11) NOT NULL DEFAULT '0',
  `error` text,
  PRIMARY KEY (`solution_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `runtimeinfo`
--

LOCK TABLES `runtimeinfo` WRITE;
/*!40000 ALTER TABLE `runtimeinfo` DISABLE KEYS */;
INSERT INTO `runtimeinfo` VALUES (1001,''),(1003,'========[input11.out]=========\n=======diff out 100 lines=====\n1d0\n< 0 15 51 60 85 90 102 105 150 153 165 170 195 204 240\r\n==============================\n'),(1006,'========[input1.out]=========\n=======diff out 100 lines=====\n1c1\n< 12\n---\n> 45\n==============================\n'),(1016,'Exception in thread \"main\" java.util.NoSuchElementException: No line found\n	at java.util.Scanner.nextLine(Scanner.java:1540)\n	at Main.main(Main.java:32)\n'),(1018,'========[input1.out]=========\n=======diff out 100 lines=====\n3c3\n< Run #3: Presentation Error\n---\n> Run #3: Accepted\n==============================\n'),(1020,'========[input5.out]=========\n=======diff out 100 lines=====\n1c1\n< 23\n---\n> 19998\n==============================\n'),(1023,'========[input7.out]=========\n=======diff out 100 lines=====\n1c1\n< 499498\n---\n> 499500\n==============================\n'),(1027,'========[input7.out]=========\n=======diff out 100 lines=====\n1c1\n< 166661666700000\n---\n> -244253984\n==============================\n'),(1028,'========[input7.out]=========\n=======diff out 100 lines=====\n1c1\n< 166661666700000\n---\n>                                                       -244253984\n==============================\n'),(1030,'========[input7.out]=========\n=======diff out 100 lines=====\n1c1\n< '),(1031,'========[input7.out]=========\n=======diff out 100 lines=====\n1c1\n< '),(1034,''),(1036,'========[input11.out]=========\n=======diff out 100 lines=====\n1c1\n< 96\n---\n> 338\n\\ No newline at end of file\n==============================\n'),(1037,'========[input11.out]=========\n=======diff out 100 lines=====\n1c1\n< 96\n---\n> 338\n==============================\n'),(1038,'========[input11.out]=========\n=======diff out 100 lines=====\n1c1\n< 96\n---\n> 426\n==============================\n'),(1040,'Runtime Error:Segmentation fault\n'),(1039,'========[input10.out]=========\n=======diff out 100 lines=====\n1c1\n< 344\n---\n> 3200\n\\ No newline at end of file\n==============================\n'),(1042,'========[input10.out]=========\n=======diff out 100 lines=====\n1c1\n< 234646335345\n---\n> 3265920\n\\ No newline at end of file\n==============================\n');
/*!40000 ALTER TABLE `runtimeinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sessions`
--

DROP TABLE IF EXISTS `sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sessions` (
  `session_id` varchar(24) NOT NULL,
  `last_active` int(10) unsigned NOT NULL,
  `contents` text NOT NULL,
  PRIMARY KEY (`session_id`),
  KEY `last_active` (`last_active`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sessions`
--

LOCK TABLES `sessions` WRITE;
/*!40000 ALTER TABLE `sessions` DISABLE KEYS */;
INSERT INTO `sessions` VALUES ('5789ec18e470d1-06683378',1468778005,'YTo0OntzOjExOiJsYXN0X2FjdGl2ZSI7aToxNDY4Nzc4MDA1O3M6MTE6ImxvZ2luX3RpbWVzIjtpOjE7czo5OiJhdXRoX3VzZXIiO086MTA6Ik1vZGVsX1VzZXIiOjIwOntzOjc6InVzZXJfaWQiO3M6NToiYWRtaW4iO3M6NToiZW1haWwiO3M6MTU6Ijg3NjU0MzIxQHFxLmNvbSI7czo2OiJzdWJtaXQiO3M6MjoiMzMiO3M6Njoic29sdmVkIjtzOjI6IjI1IjtzOjc6ImRlZnVuY3QiO3M6MToiTiI7czoyOiJpcCI7czoxNDoiNjEuMTcwLjEzNi4xNTEiO3M6MTA6ImFjY2Vzc3RpbWUiO3M6MTk6IjIwMTYtMDctMTYgMTY6MTE6MDQiO3M6Njoidm9sdW1lIjtzOjE6IjEiO3M6ODoibGFuZ3VhZ2UiO3M6MToiMSI7czo4OiJwYXNzd29yZCI7czozMjoia3JzR0dOczJXL1R2eitkZENtL1B0VXRsQ0NJNE16Z3oiO3M6ODoicmVnX3RpbWUiO3M6MTk6IjIwMTYtMDYtMTMgMDA6MDc6MTEiO3M6NDoibmljayI7czo1OiJhZG1pbiI7czo2OiJzY2hvb2wiO3M6NDoic3RqdSI7czo2OiJsb2NhbGUiO3M6MjoiZW4iO3M6NToidGhlbWUiO047czoxODoiACoAcGVybWlzc2lvbl9saXN0IjtOO3M6MjQ6IgAqAHJlc29sdmVkX3Byb2JsZW1fbGlzdCI7TjtzOjIyOiIAKgB0cnlpbmdfcHJvYmxlbV9saXN0IjtOO3M6MjI6IgAqAF9udW1iZXJfb2ZfbmV3X21haWwiO047czo2OiIAKgBfZGIiO086MTU6IkRhdGFiYXNlX015U1FMaSI6Njp7czoxNzoiACoAX2Nvbm5lY3Rpb25faWQiO3M6NDA6ImQzZGM3MjFiNWE5MjQ5NThjOGIyMmMxOTBkODk5OTJkOTFjNzc2YTEiO3M6MTQ6IgAqAF9pZGVudGlmaWVyIjtzOjE6ImAiO3M6MTA6Imxhc3RfcXVlcnkiO3M6OTA6IlNFTEVDVCBgc2Vzc2lvbl9pZGAgRlJPTSBgc2Vzc2lvbnNgIFdIRVJFIGBzZXNzaW9uX2lkYCA9ICc1Nzg5ZWMxOGU0NzBkMS0wNjY4MzM3OCcgTElNSVQgMSI7czoxMjoiACoAX2luc3RhbmNlIjtzOjc6ImRlZmF1bHQiO3M6MTQ6IgAqAF9jb25uZWN0aW9uIjtPOjY6Im15c3FsaSI6MTc6e3M6MTM6ImFmZmVjdGVkX3Jvd3MiO047czoxMToiY2xpZW50X2luZm8iO047czoxNDoiY2xpZW50X3ZlcnNpb24iO047czoxMzoiY29ubmVjdF9lcnJubyI7TjtzOjEzOiJjb25uZWN0X2Vycm9yIjtOO3M6NToiZXJybm8iO047czo1OiJlcnJvciI7TjtzOjExOiJmaWVsZF9jb3VudCI7TjtzOjk6Imhvc3RfaW5mbyI7TjtzOjQ6ImluZm8iO047czo5OiJpbnNlcnRfaWQiO047czoxMToic2VydmVyX2luZm8iO047czoxNDoic2VydmVyX3ZlcnNpb24iO047czo4OiJzcWxzdGF0ZSI7TjtzOjE2OiJwcm90b2NvbF92ZXJzaW9uIjtOO3M6OToidGhyZWFkX2lkIjtOO3M6MTM6Indhcm5pbmdfY291bnQiO047fXM6MTA6IgAqAF9jb25maWciO2E6Njp7czo0OiJ0eXBlIjtzOjY6Ik15U1FMaSI7czoxMDoiY29ubmVjdGlvbiI7YTozOntzOjg6Imhvc3RuYW1lIjtzOjk6IjEyNy4wLjAuMSI7czo4OiJkYXRhYmFzZSI7czo1OiJqdWRnZSI7czoxMDoicGVyc2lzdGVudCI7YjowO31zOjEyOiJ0YWJsZV9wcmVmaXgiO3M6MDoiIjtzOjc6ImNoYXJzZXQiO3M6NDoidXRmOCI7czo3OiJjYWNoaW5nIjtiOjA7czo5OiJwcm9maWxpbmciO2I6MTt9fX1zOjY6InZvbHVtZSI7czoxOiIxIjt9'),('5787b57a4099b4-85201216',1468605196,'YTo0OntzOjExOiJsYXN0X2FjdGl2ZSI7aToxNDY4NjA1MTk2O3M6MTE6ImxvZ2luX3RpbWVzIjtpOjE7czo5OiJhdXRoX3VzZXIiO086MTA6Ik1vZGVsX1VzZXIiOjIwOntzOjc6InVzZXJfaWQiO3M6NToiYWRtaW4iO3M6NToiZW1haWwiO3M6MTU6Ijg3NjU0MzIxQHFxLmNvbSI7czo2OiJzdWJtaXQiO3M6MjoiMzIiO3M6Njoic29sdmVkIjtzOjI6IjI0IjtzOjc6ImRlZnVuY3QiO3M6MToiTiI7czoyOiJpcCI7czoxNDoiMTAxLjI0NC44MS4yMzYiO3M6MTA6ImFjY2Vzc3RpbWUiO3M6MTk6IjIwMTYtMDctMTQgMjM6NTM6MzAiO3M6Njoidm9sdW1lIjtzOjE6IjEiO3M6ODoibGFuZ3VhZ2UiO3M6MToiMSI7czo4OiJwYXNzd29yZCI7czozMjoia3JzR0dOczJXL1R2eitkZENtL1B0VXRsQ0NJNE16Z3oiO3M6ODoicmVnX3RpbWUiO3M6MTk6IjIwMTYtMDYtMTMgMDA6MDc6MTEiO3M6NDoibmljayI7czo1OiJhZG1pbiI7czo2OiJzY2hvb2wiO3M6NDoic3RqdSI7czo2OiJsb2NhbGUiO3M6MjoiZW4iO3M6NToidGhlbWUiO047czoxODoiACoAcGVybWlzc2lvbl9saXN0IjtOO3M6MjQ6IgAqAHJlc29sdmVkX3Byb2JsZW1fbGlzdCI7TjtzOjIyOiIAKgB0cnlpbmdfcHJvYmxlbV9saXN0IjtOO3M6MjI6IgAqAF9udW1iZXJfb2ZfbmV3X21haWwiO047czo2OiIAKgBfZGIiO086MTU6IkRhdGFiYXNlX015U1FMaSI6Njp7czoxNzoiACoAX2Nvbm5lY3Rpb25faWQiO3M6NDA6ImQzZGM3MjFiNWE5MjQ5NThjOGIyMmMxOTBkODk5OTJkOTFjNzc2YTEiO3M6MTQ6IgAqAF9pZGVudGlmaWVyIjtzOjE6ImAiO3M6MTA6Imxhc3RfcXVlcnkiO3M6OTA6IlNFTEVDVCBgc2Vzc2lvbl9pZGAgRlJPTSBgc2Vzc2lvbnNgIFdIRVJFIGBzZXNzaW9uX2lkYCA9ICc1Nzg3YjU3YTQwOTliNC04NTIwMTIxNicgTElNSVQgMSI7czoxMjoiACoAX2luc3RhbmNlIjtzOjc6ImRlZmF1bHQiO3M6MTQ6IgAqAF9jb25uZWN0aW9uIjtPOjY6Im15c3FsaSI6MTc6e3M6MTM6ImFmZmVjdGVkX3Jvd3MiO047czoxMToiY2xpZW50X2luZm8iO047czoxNDoiY2xpZW50X3ZlcnNpb24iO047czoxMzoiY29ubmVjdF9lcnJubyI7TjtzOjEzOiJjb25uZWN0X2Vycm9yIjtOO3M6NToiZXJybm8iO047czo1OiJlcnJvciI7TjtzOjExOiJmaWVsZF9jb3VudCI7TjtzOjk6Imhvc3RfaW5mbyI7TjtzOjQ6ImluZm8iO047czo5OiJpbnNlcnRfaWQiO047czoxMToic2VydmVyX2luZm8iO047czoxNDoic2VydmVyX3ZlcnNpb24iO047czo4OiJzcWxzdGF0ZSI7TjtzOjE2OiJwcm90b2NvbF92ZXJzaW9uIjtOO3M6OToidGhyZWFkX2lkIjtOO3M6MTM6Indhcm5pbmdfY291bnQiO047fXM6MTA6IgAqAF9jb25maWciO2E6Njp7czo0OiJ0eXBlIjtzOjY6Ik15U1FMaSI7czoxMDoiY29ubmVjdGlvbiI7YTozOntzOjg6Imhvc3RuYW1lIjtzOjk6IjEyNy4wLjAuMSI7czo4OiJkYXRhYmFzZSI7czo1OiJqdWRnZSI7czoxMDoicGVyc2lzdGVudCI7YjowO31zOjEyOiJ0YWJsZV9wcmVmaXgiO3M6MDoiIjtzOjc6ImNoYXJzZXQiO3M6NDoidXRmOCI7czo3OiJjYWNoaW5nIjtiOjA7czo5OiJwcm9maWxpbmciO2I6MTt9fX1zOjY6InZvbHVtZSI7czoxOiIxIjt9'),('5789e87fe79235-32324285',1468655751,'YToyOntzOjY6InZvbHVtZSI7aToxO3M6MTE6Imxhc3RfYWN0aXZlIjtpOjE0Njg2NTU3NTE7fQ==');
/*!40000 ALTER TABLE `sessions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sim`
--

DROP TABLE IF EXISTS `sim`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sim` (
  `s_id` int(11) NOT NULL,
  `sim_s_id` int(11) DEFAULT NULL,
  `sim` int(11) DEFAULT NULL,
  PRIMARY KEY (`s_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sim`
--

LOCK TABLES `sim` WRITE;
/*!40000 ALTER TABLE `sim` DISABLE KEYS */;
/*!40000 ALTER TABLE `sim` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `solution`
--

DROP TABLE IF EXISTS `solution`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `solution` (
  `solution_id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) NOT NULL DEFAULT '0',
  `user_id` char(48) NOT NULL,
  `time` int(11) NOT NULL DEFAULT '0',
  `memory` int(11) NOT NULL DEFAULT '0',
  `in_date` datetime NOT NULL DEFAULT '1000-01-01 00:00:00',
  `result` smallint(6) NOT NULL DEFAULT '0',
  `language` int(10) unsigned NOT NULL DEFAULT '0',
  `ip` char(15) NOT NULL,
  `contest_id` int(11) DEFAULT NULL,
  `valid` tinyint(4) NOT NULL DEFAULT '1',
  `num` tinyint(4) NOT NULL DEFAULT '-1',
  `code_length` int(11) NOT NULL DEFAULT '0',
  `judgetime` datetime DEFAULT NULL,
  `pass_rate` decimal(2,2) unsigned NOT NULL DEFAULT '0.00',
  PRIMARY KEY (`solution_id`),
  KEY `uid` (`user_id`),
  KEY `pid` (`problem_id`),
  KEY `res` (`result`),
  KEY `cid` (`contest_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1043 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `solution`
--

LOCK TABLES `solution` WRITE;
/*!40000 ALTER TABLE `solution` DISABLE KEYS */;
INSERT INTO `solution` VALUES (1001,1000,'admin',0,920,'2016-06-19 17:22:12',4,0,'127.0.0.1',NULL,1,-1,107,'2016-07-09 20:11:01','0.00'),(1002,1000,'orientalstu',0,0,'2016-06-19 17:22:57',11,0,'127.0.0.1',NULL,1,-1,107,'2016-06-24 12:03:41','0.00'),(1003,1003,'admin',163,18700,'2016-07-01 20:14:03',4,3,'180.154.201.34',NULL,1,-1,886,'2016-07-02 15:50:22','0.00'),(1004,1003,'admin',152,18256,'2016-07-02 15:29:06',4,3,'58.37.160.186',NULL,1,-1,908,'2016-07-02 15:42:41','0.00'),(1005,109,'admin',168,19984,'2016-07-02 17:00:04',4,3,'58.37.160.186',NULL,1,-1,580,'2016-07-02 17:00:04','0.00'),(1006,107,'admin',0,1504,'2016-07-02 17:42:52',4,1,'58.37.160.186',NULL,1,-1,661,'2016-07-09 20:09:47','0.00'),(1007,108,'admin',147,18556,'2016-07-03 02:10:13',4,3,'211.161.247.209',NULL,1,-1,1835,'2016-07-03 02:28:46','0.00'),(1008,103,'admin',149,17584,'2016-07-03 14:26:14',4,3,'101.44.66.123',NULL,1,-1,453,'2016-07-03 14:26:14','0.00'),(1009,101,'admin',0,0,'2016-07-03 14:57:02',11,3,'101.44.66.123',NULL,1,-1,525,'2016-07-03 14:57:02','0.00'),(1010,101,'admin',135,16692,'2016-07-03 14:57:47',4,3,'101.44.66.123',NULL,1,-1,522,'2016-07-03 14:57:48','0.00'),(1011,102,'admin',147,18676,'2016-07-03 17:07:20',4,3,'101.44.66.123',NULL,1,-1,422,'2016-07-03 17:08:02','0.00'),(1012,104,'admin',146,18784,'2016-07-03 17:41:50',4,3,'101.44.66.123',NULL,1,-1,871,'2016-07-03 17:41:50','0.00'),(1013,105,'admin',181,17764,'2016-07-03 19:18:36',4,3,'211.161.244.93',NULL,1,-1,381,'2016-07-03 19:18:36','0.00'),(1014,1005,'admin',151,18524,'2016-07-04 00:18:00',4,3,'115.174.201.241',NULL,1,-1,853,'2016-07-04 00:18:00','0.00'),(1015,1006,'admin',148,18564,'2016-07-07 18:54:20',4,3,'211.161.247.91',NULL,1,-1,1019,'2016-07-07 18:54:21','0.00'),(1016,1008,'admin',155,18500,'2016-07-08 19:50:55',10,3,'211.161.244.81',NULL,1,-1,2244,'2016-07-08 19:57:15','0.00'),(1017,1008,'admin',152,18704,'2016-07-08 20:00:40',4,3,'211.161.244.81',NULL,1,-1,2336,'2016-07-08 20:00:41','0.00'),(1018,1009,'admin',145,18792,'2016-07-09 01:01:02',4,3,'211.161.244.216',NULL,1,-1,1405,'2016-07-09 14:54:53','0.00'),(1019,110,'admin',9,2304,'2016-07-09 20:45:02',4,1,'211.161.247.219',NULL,1,-1,1437,'2016-07-09 20:45:02','0.00'),(1020,1010,'admin',5,3068,'2016-07-10 00:20:13',4,1,'211.161.247.219',NULL,1,-1,517,'2016-07-10 00:22:25','0.00'),(1021,1011,'admin',1,14008,'2016-07-10 01:51:02',5,1,'211.161.247.219',NULL,1,-1,1282,'2016-07-10 02:01:11','0.00'),(1022,1011,'admin',0,0,'2016-07-10 02:06:59',11,1,'211.161.247.219',NULL,1,-1,1281,'2016-07-10 02:07:00','0.00'),(1023,1011,'admin',0,14008,'2016-07-10 02:08:47',4,1,'211.161.247.219',NULL,1,-1,1279,'2016-07-11 00:39:55','0.00'),(1024,111,'admin',0,1504,'2016-07-11 01:28:13',4,1,'118.205.27.155',NULL,1,-1,284,'2016-07-11 01:28:39','0.00'),(1025,1012,'admin',0,1504,'2016-07-11 21:49:01',4,1,'101.244.85.156',NULL,1,-1,256,'2016-07-11 21:49:01','0.00'),(1026,1013,'admin',0,1504,'2016-07-11 23:21:04',4,1,'101.244.85.156',NULL,1,-1,287,'2016-07-11 23:21:04','0.00'),(1027,1014,'admin',88,2284,'2016-07-12 01:13:16',6,1,'101.244.85.156',NULL,1,-1,733,'2016-07-12 01:13:40','0.00'),(1028,1014,'admin',0,2284,'2016-07-12 01:15:02',5,1,'101.244.85.156',NULL,1,-1,737,'2016-07-12 01:22:21','0.00'),(1029,1014,'admin',90,2284,'2016-07-12 23:13:52',4,1,'101.245.222.58',NULL,1,-1,727,'2016-07-12 23:15:23','0.00'),(1030,1018,'admin',10,1504,'2016-07-13 20:21:15',6,1,'202.120.30.245',NULL,1,-1,357,'2016-07-13 20:21:45','0.00'),(1031,1018,'admin',26,1504,'2016-07-13 20:23:58',4,1,'202.120.30.245',NULL,1,-1,707,'2016-07-13 20:29:57','0.00'),(1032,1025,'admin',0,1504,'2016-07-13 21:46:17',4,1,'211.161.247.198',NULL,1,-1,357,'2016-07-13 21:46:17','0.00'),(1033,1019,'admin',0,5408,'2016-07-13 23:41:06',4,1,'211.161.247.198',NULL,1,-1,1025,'2016-07-13 23:41:07','0.00'),(1034,1023,'admin',18,2876,'2016-07-15 14:16:58',4,1,'202.120.30.245',NULL,1,-1,446,'2016-07-15 15:17:02','0.00'),(1035,1024,'admin',0,1504,'2016-07-16 17:39:08',4,1,'61.170.136.151',NULL,1,-1,308,'2016-07-17 13:57:14','0.00'),(1036,10004,'admin',35,2176,'2016-07-17 13:04:56',4,1,'115.174.39.247',NULL,1,-1,2208,'2016-07-17 15:03:15','0.00'),(1037,10004,'admin',2992,10496,'2016-07-17 13:59:56',4,1,'115.174.39.247',NULL,1,-1,2022,'2016-07-17 15:12:14','0.00'),(1038,10004,'admin',3428,24700,'2016-07-17 14:05:48',4,1,'115.174.39.247',NULL,1,-1,1656,'2016-07-17 15:12:08','0.00'),(1039,10004,'admin',180,2084,'2016-07-17 14:26:45',4,1,'115.174.39.247',NULL,1,-1,3749,'2016-07-17 15:11:58','0.00'),(1040,10004,'admin',1195,3708,'2016-07-17 14:31:18',4,1,'115.174.39.247',NULL,1,-1,4490,'2016-07-17 15:12:44','0.00'),(1041,10004,'admin',8000,9660,'2016-07-17 14:41:37',7,1,'115.174.39.247',NULL,1,-1,2771,'2016-07-17 14:46:55','0.00'),(1042,10014,'admin',0,2484,'2016-07-18 01:08:46',4,1,'115.174.39.247',NULL,1,-1,796,'2016-07-18 01:53:14','0.00');
/*!40000 ALTER TABLE `solution` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `source_code`
--

DROP TABLE IF EXISTS `source_code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `source_code` (
  `solution_id` int(11) NOT NULL,
  `source` text NOT NULL,
  PRIMARY KEY (`solution_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `source_code`
--

LOCK TABLES `source_code` WRITE;
/*!40000 ALTER TABLE `source_code` DISABLE KEYS */;
INSERT INTO `source_code` VALUES (1001,'#include <stdio.h>\nint main() {int a, b;\n    scanf(\"%d%d\", &a, &b);\n    printf(\"%d\\n\", a + b);\n    return 0;\n\n}'),(1002,'#include\n \nint main() {\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    printf(\"%d\\n\", a + b);\n    return 0;\n}'),(1003,'import java.util.Scanner;\n\npublic class Main {\n    static int N,B,D;\n	public static void main(String[] args) {\n		Scanner scan = new Scanner(System.in);\n		N = scan.nextInt();\n		B = scan.nextInt();\n		D = scan.nextInt();\n		\n		int[] result = new int[N];\n		result[0]=0;\n		for(int i=1;i<N;i++){\n			int index=1;\n			while(index<=Math.pow(2, B)){\n				boolean isHamming = true;\n				for(int j=0;j<i;j++){\n					if(getHammingDis(result[j],index)==false){\n						isHamming = false;\n						break;\n					}\n				}\n				if(isHamming == true){\n					result[i] = index;\n					break;\n				}\n				index++;\n			}\n		}\n		for(int i=0;i<N;i++){\n			System.out.print(result[i]+\" \");\n		}\n	}\n    \n	\n	public static boolean getHammingDis(int a,int b){\n		int difNum = 0 ;\n		for(int i=0;i<B;i++){\n			int a1 = a&(1<<i);\n			int b1 = b&(1<<i);\n			if(a1!=b1)\n				difNum ++;\n			if(difNum>=D)\n				return true;\n		}\n		\n		return false;\n	}\n}'),(1004,'import java.util.Scanner;\n\npublic class Main {\n    static int N,B,D;\n	public static void main(String[] args) {\n		Scanner scan = new Scanner(System.in);\n		N = scan.nextInt();\n		B = scan.nextInt();\n		D = scan.nextInt();\n		\n		int[] result = new int[N];\n		result[0]=0;\n		for(int i=1;i<N;i++){\n			int index=1;\n			while(index<=Math.pow(2, B)){\n				boolean isHamming = true;\n				for(int j=0;j<i;j++){\n					if(getHammingDis(result[j],index)==false){\n						isHamming = false;\n						break;\n					}\n				}\n				if(isHamming == true){\n					result[i] = index;\n					break;\n				}\n				index++;\n			}\n		}\n		for(int i=0;i<N;i++){\n			System.out.print(result[i]);\n			System.out.print(\" \");\n		}\n	}\n    \n	\n	public static boolean getHammingDis(int a,int b){\n		int difNum = 0 ;\n		for(int i=0;i<B;i++){\n			int a1 = a&(1<<i);\n			int b1 = b&(1<<i);\n			if(a1!=b1)\n				difNum ++;\n			if(difNum>=D)\n				return true;\n		}\n		\n		return false;\n	}\n}'),(1005,'import java.math.BigDecimal;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) {\n		Scanner cin=new Scanner(System.in);\n        while(cin.hasNext())\n        {\n            BigDecimal r=cin.nextBigDecimal();\n            int n=cin.nextInt();\n            r=r.pow(n).stripTrailingZeros();//去掉小数点后面的零\n            String m_string=r.toPlainString();//不带指数段的字符串表示形式\n            if(m_string.charAt(0)==\'0\')\n            m_string=m_string.substring(1);\n            System.out.println(m_string);\n        }\n\n	}\n\n}'),(1006,'#include <iostream>\nusing namespace std;\n#define ULL unsigned long long\n\nULL mul_mod (ULL a, ULL b, ULL c) \n{\n    ULL res = 0;\n    for ( ; b; b >>= 1)\n    {\n        if (b & 1)\n        {\n            res += a;   \n            if (res >= c) res -= c;\n        }\n        a <<= 1;    \n        if (a >= c) a -= c;\n    }\n    return res;\n}\n\nULL qmod (ULL a, ULL b, ULL c)\n{\n    ULL res = 1;\n    for ( ; b; b >>= 1)\n    {\n        if (b & 1)\n            res = mul_mod (a, res, c);\n        a = mul_mod (a, a, c);\n    }\n    return res;\n}\n\nint main()\n{\n    ULL a, b, c;\n    if (~scanf (\"%lld%lld%lld\", &a, &b, &c))\n        printf (\"%lld\\n\", qmod (a%c, b, c));\n    return 0;\n}\n'),(1007,'import java.util.*;\n\npublic class Main {\n\n	public static void main(String[] args) {\n		ArrayList<Long> inputs = new ArrayList<Long>();\n		Scanner scan = new Scanner(System.in);// 接收控制台输入的信息\n		long num1 = 0, num2 = 0;\n\n		if (scan.hasNextLine()) {\n			String inputStr = scan.nextLine();\n			String[] vars = inputStr.split(\" \");\n			for (int i = 0; i < vars.length; i++) {\n				long temp = Long.valueOf(vars[i]);\n				inputs.add(temp);\n				if (num1 == 0)\n					num1 = temp;\n				else {\n					num2 = temp;\n					num1 = maxCommonDivisor(num1, num2);\n				}\n\n			}\n\n			System.out.println(num1);// 调用maxCommonDivisor()方法\n			System.out.println(minCommonMultiple(inputs, num1));// 调用minCommonMultiple()方法\n		}\n	}\n\n	// 递归法求最大公约数\n	public static long maxCommonDivisor(long m, long n) {\n		if (m < n) {// 保证m>n,若m<n,则进行数据交换\n			long temp = m;\n			m = n;\n			n = temp;\n		}\n		if (m % n == 0) {// 若余数为0,返回最大公约数\n			return n;\n		} else { // 否则,进行递归,把n赋给m,把余数赋给n\n			return maxCommonDivisor(n, m % n);\n		}\n	}\n\n	// 循环法求最大公约数\n	public static long maxCommonDivisor2(long m, long n) {\n\n		if (m < n) {// 保证m>n,若m<n,则进行数据交换\n			long temp = m;\n			m = n;\n			n = temp;\n		}\n		while (m % n != 0) {// 在余数不能为0时,进行循环\n			long temp = m % n;\n			m = n;\n			n = temp;\n		}\n		return n;// 返回最大公约数\n	}\n\n	// 求最小公倍数\n	public static long minCommonMultiple(long m, long n) {\n		return m * n / maxCommonDivisor(m, n);\n	}\n\n	// 求最小公倍数\n	public static long minCommonMultiple(ArrayList<Long> array, long maxDivisor) {\n		long min = minCommonMultiple(array.get(0),array.get(1));\n		for (int i = 2; i < array.size(); i++) {\n			min = minCommonMultiple(array.get(i),min);\n		}\n\n		return min;\n	}\n\n}\n'),(1008,'import java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String argv[]) {\n\n		Scanner scan = new Scanner(System.in);\n		int N = scan.nextInt();\n		if(isPrime(N)){\n			System.out.print(\"YES\");\n		}else\n			System.out.print(\"NO\");\n\n	}\n\n	private static boolean isPrime(int n) {\n		if (n <= 1) {\n			return false;\n		}\n		int k = (int) Math.sqrt(n);\n		for (int i = 2; i <= k; i++) {\n			if (n % i == 0) {\n				return false;\n			}\n		}\n		return true;\n	}\n\n}'),(1009,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Summing {\n\n	public static void main(String[] args) {\n		ArrayList<Integer> inputs = new ArrayList<Integer>();\n		Scanner scan = new Scanner(System.in);\n		while(scan.hasNext()){\n			String str = scan.nextLine();\n			try{\n				int i = Integer.valueOf(str);\n				inputs.add(i);\n			}catch(NumberFormatException e){\n				break;\n			}\n		}\n		scan.close();\n        int add = 0;\n		for(int i=0;i<inputs.size();i++){\n			add += inputs.get(i);\n		}\n		System.out.print(add);\n	}\n\n}'),(1010,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) {\n		ArrayList<Integer> inputs = new ArrayList<Integer>();\n		Scanner scan = new Scanner(System.in);\n		while(scan.hasNext()){\n			String str = scan.nextLine();\n			try{\n				int i = Integer.valueOf(str);\n				inputs.add(i);\n			}catch(NumberFormatException e){\n				break;\n			}\n		}\n		scan.close();\n        int add = 0;\n		for(int i=0;i<inputs.size();i++){\n			add += inputs.get(i);\n		}\n		System.out.print(add);\n	}\n\n}'),(1011,'import java.math.BigDecimal;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) {\n		// TODO Auto-generated method stub\n		Scanner scan = new Scanner(System.in);\n		double n = scan.nextInt();\n		System.out.print(new BigDecimal(calHanoi(n)));\n	}\n    \n	private static double calHanoi(double n){\n		if(n==1)\n			return 1;\n		else if(n==2)\n			return 3;\n		else{\n			return 2*calHanoi(n-1);\n		}\n	}\n}'),(1012,'import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\n	static HashMap<Integer,Integer> factors = new HashMap<Integer,Integer>();\n	static ArrayList<Integer> keys = new ArrayList<Integer>();\n	\n	public static void primeFactors(int numbers) {\n		int n = numbers;\n		\n		for (int i = 2; i <= n / i; i++) {\n			while (n % i == 0) {\n				if(factors.containsKey(i))\n					factors.put(i, factors.get(i)+1);\n				else{\n					factors.put(i, 1);\n					keys.add(i);\n				}\n				\n				n /= i;\n			}\n		}\n		if (n > 1) {\n			factors.put(n, 1);\n			keys.add(n);\n		}\n	}\n\n	public static void main(String[] args) {\n		StringBuffer buffer =new StringBuffer();\n		Scanner scan = new Scanner(System.in);\n		primeFactors(scan.nextInt());\n		\n		for (Integer i : keys) {\n			buffer.append(i+\"(\"+factors.get(i)+\")\");\n		}\n		\n		System.out.println(buffer.toString());\n\n	}\n\n}'),(1013,'import java.util.Scanner;\n\npublic class Main {\n   \n	static int N;\n	static int K;\n	public static void main(String[] args) {\n		Scanner scan = new Scanner(System.in);\n		N = scan.nextInt();\n		K = scan.nextInt();\n		\n		int survior = 1;\n		for(int i=2;i<=N;i++){\n			survior = (survior+K)%i;\n			if(survior == 0)//the i-th position\n				survior = i;\n		}\n		System.out.print(survior);\n	}\n    \n}'),(1014,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) {\n		// TODO Auto-generated method stub\n		ArrayList<String> results = new ArrayList<String>();\n		Scanner scan = new Scanner(System.in);// 接收控制台输入的信息\n		while(scan.hasNext()){\n			int day = scan.nextInt();\n			if(day==0)\n				break;\n			int dMoney = getDailyMoney(day);\n			int money =0;\n			for(int i=1;i<=dMoney;i++){\n				money+=i*i;\n			}\n			money+=(day-dMoney*(dMoney+1)/2)*(dMoney+1);\n			results.add(day+\" \"+money);\n		}\n		\n		for(int i=0;i<results.size()-1;i++){\n			System.out.println(results.get(i));\n		}\n		System.out.print(results.get(results.size()-1));\n	}\n    \n	static int getDailyMoney(int day){\n		int num = day*2;\n		int money = (int)Math.pow(num,0.5);\n		if(money*(money+1)>num)\n			return money-1;\n		return money;\n	}\n}'),(1015,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n	static ArrayList<Integer> results = new ArrayList<Integer>();\n\n	public static void main(String argv[]) {\n\n		Scanner scan = new Scanner(System.in);\n		while (scan.hasNext()) {\n			String str = scan.nextLine();\n			try {\n				String[] pairs = str.split(\" \");\n				if (pairs == null || pairs.length != 2) {\n					break;\n				}\n				results.add(getLengthOfN(Integer.valueOf(pairs[0]), Integer.valueOf(pairs[1])));\n\n			} catch (NumberFormatException e) {\n				break;\n			}\n		}\n		scan.close();\n\n		for (int i = 0; i < results.size(); i++) {\n			System.out.println(results.get(i));\n		}\n\n	}\n\n	public static int gys(int a, int b) // gongyueshu\n	{\n		if (a == 0)\n			return b;\n		return gys(b % a, a);\n	}\n\n	public static int getLengthOfN(int n, int k) {\n		int temp = gys(n, k);\n		k = k / temp;\n		if (((k & 1) == 0) || ((k % 5) == 0)) {\n			return 0;\n		}\n\n		n = n / temp;\n		int c = 0, i = 0;\n		do {\n			c = (c * 10 + 1) % k;\n			i++;\n		} while (c != 0);\n		return i;\n	}\n}\n'),(1016,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) throws Exception {\n\n		Scanner scan = new Scanner(System.in);\n		String line = scan.nextLine();\n		int testCases = Integer.parseInt(line);\n\n		line = scan.nextLine(); // read the empty line\n\n		while (testCases-- > 0) {\n\n			line = scan.nextLine();\n			if (line.length() == 0) {\n				testCases++;\n				continue;\n			}\n\n			int n = Integer.parseInt(line);\n			String[] names = new String[n];\n\n			for (int i = 0; i < n; i++)\n				names[i] = scan.nextLine();\n\n			ArrayList<Integer[]> results = new ArrayList<Integer[]>();\n\n			while (true) {\n\n				line = scan.nextLine();\n				if (line == null || line.length() == 0)\n					break;\n\n				line = line.trim();\n				Integer[] ballot = new Integer[n];\n\n				String[] parts = line.split(\"\\\\s+\");\n\n				for (int i = 0; i < parts.length; i++)\n					ballot[i] = Integer.parseInt(parts[i]) - 1;\n\n				results.add(ballot);\n\n			}\n\n			Boolean[] blacklist = new Boolean[n];\n			for (int i = 0; i < n; i++) {\n				blacklist[i] = false;\n			}\n\n			ArrayList<Integer> winners = new ArrayList<Integer>();\n\n			while (true) {\n\n				Integer[] sum = new Integer[n];\n				for (int i = 0; i < n; i++)\n					sum[i] = 0;\n\n				int max = 0;\n				int maxChoice = -1;\n\n				for (int i = 0; i < results.size(); i++) {\n					Integer[] r = results.get(i);\n					int choice = -1;\n					for (int j = 0; j < n; j++) {\n						if (!blacklist[r[j]]) {\n							choice = r[j];\n							break;\n						}\n					}\n\n					sum[choice]++;\n					if (sum[choice] > max) {\n						max = sum[choice];\n						maxChoice = choice;\n					}\n				}\n\n				if (max * 2 > results.size()) {\n					winners.add(maxChoice);\n					break;\n				} else {\n\n					int min = results.size();\n					for (int i = 0; i < n; i++) {\n						if (!blacklist[i] && (sum[i] < min))\n							min = sum[i];\n					}\n\n					for (int i = 0; i < n; i++) {\n						if ((!blacklist[i]) && (sum[i] == min)) {\n							if (min == max) {\n								winners.add(i);\n							} else {\n								blacklist[i] = true;\n							}\n						}\n					}\n\n					if (min == max)\n						break;\n\n				}\n\n			}\n\n			for (int i = 0; i < winners.size(); i++) {\n				System.out.println(names[winners.get(i)]);\n			}\n\n			if (testCases > 0)\n				System.out.println();\n\n		}\n\n	}\n\n}\n'),(1017,'import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main(String[] args) throws Exception {\n\n		Scanner scan = new Scanner(System.in);// 接收控制台输入的信息\n		String line = scan.nextLine();\n		int testCases = Integer.parseInt(line);\n\n		line = scan.nextLine(); // read the empty line\n\n		while (testCases-- > 0) {\n\n			line = scan.nextLine();\n			if (line.length() == 0) {\n				testCases++;\n				continue;\n			}\n\n			int n = Integer.parseInt(line);\n			String[] names = new String[n];\n\n			for (int i = 0; i < n; i++)\n				names[i] = scan.nextLine();\n\n			ArrayList<Integer[]> results = new ArrayList<Integer[]>();\n\n			while (true) {\n                if(!scan.hasNext())\n                	break;\n				line = scan.nextLine();\n				if (line == null || line.length() == 0)\n					break;\n\n				line = line.trim();\n				Integer[] ballot = new Integer[n];\n\n				String[] parts = line.split(\"\\\\s+\");\n\n				for (int i = 0; i < parts.length; i++)\n					ballot[i] = Integer.parseInt(parts[i]) - 1;\n\n				results.add(ballot);\n\n			}\n\n			Boolean[] blacklist = new Boolean[n];\n			for (int i = 0; i < n; i++) {\n				blacklist[i] = false;\n			}\n\n			ArrayList<Integer> winners = new ArrayList<Integer>();\n\n			while (true) {\n\n				Integer[] sum = new Integer[n];\n				for (int i = 0; i < n; i++)\n					sum[i] = 0;\n\n				int max = 0;\n				int maxChoice = -1;\n\n				for (int i = 0; i < results.size(); i++) {\n					Integer[] r = results.get(i);\n					int choice = -1;\n					for (int j = 0; j < n; j++) {\n						if (!blacklist[r[j]]) {\n							choice = r[j];\n							break;\n						}\n					}\n\n					sum[choice]++;\n					if (sum[choice] > max) {\n						max = sum[choice];\n						maxChoice = choice;\n					}\n				}\n\n				if (max * 2 > results.size()) {\n					winners.add(maxChoice);\n					break;\n				} else {\n\n					int min = results.size();\n					for (int i = 0; i < n; i++) {\n						if (!blacklist[i] && (sum[i] < min))\n							min = sum[i];\n					}\n\n					for (int i = 0; i < n; i++) {\n						if ((!blacklist[i]) && (sum[i] == min)) {\n							if (min == max) {\n								winners.add(i);\n							} else {\n								blacklist[i] = true;\n							}\n						}\n					}\n\n					if (min == max)\n						break;\n\n				}\n\n			}\n\n			for (int i = 0; i < winners.size(); i++) {\n				System.out.println(names[winners.get(i)]);\n			}\n\n			if (testCases > 0)\n				System.out.println();\n\n		}\n\n	}\n\n}\n'),(1018,'import java.util.Scanner;\n\npublic class Main {\n	public static void main(String[] args) throws Exception {\n\n		Scanner scan = new Scanner(System.in);// 接收控制台输入的信息\n		int run = 0;\n\n		while (true) {\n			run++;\n			String line = scan.nextLine();\n			int n = Integer.parseInt(line);\n			if (n == 0)\n				break;\n\n			StringBuilder goodLines = new StringBuilder();\n			StringBuilder goodNums = new StringBuilder();\n			buildCom(scan, n, goodLines, goodNums);\n\n			int m = Integer.parseInt(scan.nextLine());\n			StringBuilder inLines = new StringBuilder();\n			StringBuilder inNums = new StringBuilder();\n			buildCom(scan, m, inLines, inNums);\n\n			System.out.print(\"Run #\");\n			System.out.print(run);\n			System.out.print(\": \");\n\n			if (goodLines.toString().compareTo(inLines.toString()) == 0) {\n				System.out.println(\"Accepted\");\n			} else if (goodNums.toString().compareTo(inNums.toString()) == 0) {\n				System.out.println(\"Presentation Error\");\n			} else {\n				System.out.println(\"Wrong Answer\");\n			}\n\n		}\n\n	}\n\n	static void buildCom(Scanner reader, int numberOfLines, StringBuilder lines, StringBuilder nums) throws Exception {\n		String line;\n		for (int i = 0; i < numberOfLines; i++) {\n			line = reader.nextLine();\n			lines.append(line + \'\\n\');\n\n			for (int j = 0; j < line.length(); j++) {\n				if (Character.isDigit(line.charAt(j))) {\n					nums.append(line.charAt(j));\n				}\n			}\n		}\n		return;\n\n	}\n\n}'),(1019,'#include <cstdio>\nlong long int num[100005];\nchar sign[100005], temp[4];\nint lv[100005], signlv[260];\nint topn, tops;\nlong long int number;\nlong long int f(char s) {\n	switch (s) {\n	case \'+\':\n		return (num[topn] + num[topn + 1]) % 10000;\n	case \'*\':\n		return (num[topn] * num[topn + 1]) % 10000;\n	default:\n		return -1;\n	}\n	return -1;\n}\nvoid init() {\n	lv[0] = -1;\n	signlv[\'+\'] = 1;\n	signlv[\'*\'] = 2;\n	return ;\n}\nvoid solve() {\n	char tt;\n	while ((tt = getchar()) != \'\\n\') {\n		switch (tt) {\n		case \'+\':\n		case \'*\': {\n			num[++topn] = number;\n			number = 0;\n			if (lv[tops] < signlv[tt])\n				++tops;\n			else\n				num[--topn] = f(sign[tops]);\n			sign[tops] = tt;\n			lv[tops] = signlv[tt];\n			break;\n		}\n		default: {\n			number = number * 10 + tt - \'0\';\n			break;\n		}\n		}\n	}\n	num[++topn]= number;\n	while (tops)\n		num[--topn] = f(sign[tops--]);\n	return ;\n}\nvoid output() {\n	bool flag = false;\n	temp[0] = num[1] % 10;\n	temp[1] = (num[1] /= 10) % 10;\n	temp[2] = (num[1] /= 10) % 10;\n	temp[3] = (num[1] /= 10) % 10;\n	if (!temp[0] && !temp[1] && !temp[2] && !temp[3]) {\n		putchar(\'0\');\n		putchar(\'\\n\');\n		return ;\n	}\n	if (temp[3] || flag) {\n		putchar(temp[3] + \'0\');\n		flag = true;\n	}\n	if (temp[2] || flag) {\n		putchar(temp[2] + \'0\');\n		flag = true;\n	}\n	if (temp[1] || flag) {\n		putchar(temp[1] + \'0\');\n		flag = true;\n	}\n	if (temp[0] || flag)\n		putchar(temp[0] + \'0\');\n	putchar(\'\\n\');\n	return ;\n}\nint main() {\n	init();\n	solve();\n	output();\n	return 0;\n}'),(1020,'#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint a[200010], b[200010], n, x;\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    for (int i = 1; i <= n; ++i)\n    {\n        scanf(\"%d\", &x);\n        b[x] = i;\n    }\n    for (int i = 1; i <= n; ++i) a[i] = b[a[i]];\n    int res = 0;\n    for (int i = 1; i < n; ++i)\n        if (a[i] > a[i + 1])\n        {\n            res = n - i;\n            break;\n        }\n    printf(\"%d\\n\", res);\n\n    return 0;\n}'),(1021,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, k, a[400010];\nclass data\n{\npublic:\n    LL d, ori;\n    bool operator < (const data a) const\n    {\n        return d < a.d;\n    }\n}dat[400010];\nLL cnt[400010];\nint main()\n{\n    scanf(\"%I64d%I64d\", &n, &k);\n    for (LL i = 0; i < n; ++i)\n        scanf(\"%I64d\", &dat[i].d);\n    for (LL i = 0; i < n; ++i) dat[i].ori = i;\n    sort(dat, dat + n);\n    LL now = 0;\n    for (LL i = 0; i < n; ++i)\n    {\n        if ((i == 0) || (dat[i].d != dat[i - 1].d)) ++now;\n        a[dat[i].ori] = now;\n    }\n    memset(cnt, 0, sizeof(cnt));\n    LL left = 0, right = 0;\n    for (right = 0; right < n; ++right)\n    {\n        cnt[a[right]]++;\n        if (cnt[a[right]] >= k) break;\n    }\n    if (right == n)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    LL sum = n - right;\n    for (left = 1; left < n; ++left)\n    {\n        cnt[a[left - 1]]--;\n        if (cnt[a[left - 1]] == k - 1)\n        {\n            for (++right; right < n; ++right)\n            {\n                cnt[a[right]]++;\n                if (cnt[a[right]] >= k) break;\n            }\n            if (right == n) break;\n        }\n        sum += n - right;\n    }\n    printf(\"%I64d\\n\", sum);\n\n    return 0;\n}'),(1022,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, k, a[400010];\nclass data\n{\npublic:\n    LL d, ori;\n    bool operator < (const data a) const\n    {\n        return d < a.d;\n    }\n}dat[400010];\nLL cnt[400010];\nint main()\n{\n    scanf(\"%IId%IId\", &n, &k);\n    for (LL i = 0; i < n; ++i)\n        scanf(\"%IId\", &dat[i].d);\n    for (LL i = 0; i < n; ++i) dat[i].ori = i;\n    sort(dat, dat + n);\n    LL now = 0;\n    for (LL i = 0; i < n; ++i)\n    {\n        if ((i == 0) || (dat[i].d != dat[i - 1].d)) ++now;\n        a[dat[i].ori] = now;\n    }\n    memset(cnt, 0, sizeof(cnt));\n    LL left = 0, right = 0;\n    for (right = 0; right < n; ++right)\n    {\n        cnt[a[right]]++;\n        if (cnt[a[right]] >= k) break;\n    }\n    if (right == n)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    LL sum = n - right;\n    for (left = 1; left < n; ++left)\n    {\n        cnt[a[left - 1]]--;\n        if (cnt[a[left - 1]] == k - 1)\n        {\n            for (++right; right < n; ++right)\n            {\n                cnt[a[right]]++;\n                if (cnt[a[right]] >= k) break;\n            }\n            if (right == n) break;\n        }\n        sum += n - right;\n    }ll\n    printf(\"%IId\\n\", sum);\n \n    return 0;\n}'),(1023,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, k, a[400010];\nclass data\n{\npublic:\n    LL d, ori;\n    bool operator < (const data a) const\n    {\n        return d < a.d;\n    }\n}dat[400010];\nLL cnt[400010];\nint main()\n{\n    scanf(\"%IId%IId\", &n, &k);\n    for (LL i = 0; i < n; ++i)\n        scanf(\"%IId\", &dat[i].d);\n    for (LL i = 0; i < n; ++i) dat[i].ori = i;\n    sort(dat, dat + n);\n    LL now = 0;\n    for (LL i = 0; i < n; ++i)\n    {\n        if ((i == 0) || (dat[i].d != dat[i - 1].d)) ++now;\n        a[dat[i].ori] = now;\n    }\n    memset(cnt, 0, sizeof(cnt));\n    LL left = 0, right = 0;\n    for (right = 0; right < n; ++right)\n    {\n        cnt[a[right]]++;\n        if (cnt[a[right]] >= k) break;\n    }\n    if (right == n)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    LL sum = n - right;\n    for (left = 1; left < n; ++left)\n    {\n        cnt[a[left - 1]]--;\n        if (cnt[a[left - 1]] == k - 1)\n        {\n            for (++right; right < n; ++right)\n            {\n                cnt[a[right]]++;\n                if (cnt[a[right]] >= k) break;\n            }\n            if (right == n) break;\n        }\n        sum += n - right;\n    }\n    printf(\"%IId\\n\", sum);\n \n    return 0;\n}'),(1024,'#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n;\ndouble x, sum;\nint main()\n{\n    cin  >> n;\n    sum = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        cin >> x;\n        sum += x;\n    }\n    sum /= (double)n;\n    cout << sum << endl;\n    return 0;\n}'),(1025,'#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint main() {\n    int r, x, s = 1;\n    scanf(\"%d\", &x);\n    for (r = 1; ; r += 2)\n        if (((r * r + 1) >> 1) >= x) break;\n    printf(\"%d\\n\", (x == 3) ? 5 : r);\n    return 0;\n}'),(1026,'#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nchar str[30];\nint main() {\n    scanf(\"%s\", str);\n    char c = 0;\n    for (int i = 0; str[i]; ++i) c = max(c, str[i]);\n    for (int i = 0; str[i]; ++i) if (c == str[i]) putchar(c);\n    puts(\"\");\n    return 0;\n}'),(1027,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, d;\nLL a[100010];\nint main() {\n    scanf(\"%IId%IId\", &n, &d);\n    for (LL i = 1; i <= n; ++i)\n        scanf(\"%IId\", &a[i]);\n    LL ans = 0;\n    for (LL i = 1; i < n; ++i)\n    {\n        LL l = 1, r = i, mid;\n        l = i; r = n;\n        while (l < r) {\n            if (l + 1 == r) {\n                if (a[r] - a[i] <= d) l = r;\n                break;\n            }\n            mid = (l + r + 1) >> 1;\n            if (a[mid] - a[i] <= d) l = mid;\n            else r = mid - 1;\n        }\n        LL cnt = l - i;\n        if (cnt >= 2) ans += (cnt - 1) * cnt / 2;\n    }\n    printf(\"%IId\\n\", ans);\n    return 0;\n}'),(1028,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, d;\nLL a[100010];\nint main() {\n    scanf(\"%I64d%I64d\", &n, &d);\n    for (LL i = 1; i <= n; ++i)\n        scanf(\"%I64d\", &a[i]);\n    LL ans = 0;\n    for (LL i = 1; i < n; ++i)\n    {\n        LL l = 1, r = i, mid;\n        l = i; r = n;\n        while (l < r) {\n            if (l + 1 == r) {\n                if (a[r] - a[i] <= d) l = r;\n                break;\n            }\n            mid = (l + r + 1) >> 1;\n            if (a[mid] - a[i] <= d) l = mid;\n            else r = mid - 1;\n        }\n        LL cnt = l - i;\n        if (cnt >= 2) ans += (cnt - 1) * cnt / 2;\n    }\n    printf(\"%I64d\\n\", ans);\n    return 0;\n}'),(1029,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define LL long long\nusing namespace std;\nLL n, d;\nLL a[100010];\nint main() {\n    scanf(\"%IId%IId\", &n, &d);\n    for (LL i = 1; i <= n; ++i)\n        scanf(\"%IId\", &a[i]);\n    LL ans = 0;\n    for (LL i = 1; i < n; ++i)\n    {\n        LL l = 1, r = i, mid;\n        l = i; r = n;\n        while (l < r) {\n            if (l + 1 == r) {\n                if (a[r] - a[i] <= d) l = r;\n                break;\n            }\n            mid = (l + r + 1) >> 1;\n            if (a[mid] - a[i] <= d) l = mid;\n            else r = mid - 1;\n        }\n        LL cnt = l - i;\n        if (cnt >= 2) ans += (cnt - 1) * cnt / 2;\n    }\n    cout<<ans<<endl;\n    return 0;\n}'),(1030,'#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nlong long n, k, res = 1;\nconst long long mod = 1000000007LL;\nint main() {\n    cin >> n >> k;\n    for (int i = 2; i <= k; ++i) {\n        res = (res * k) % mod;\n    }\n    for (int i = k + 1; i <= n; ++i)\n        res = (res * (n - k)) % mod;\n    cout << res << endl;\n    return 0;\n}'),(1031,'#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n, m;\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    if (n == 1 && m == 1) {\n        puts(\"a\");\n    } else if (m == 1 || n < m) {\n        puts(\"-1\");\n    } else if (m == 2) {\n        for (int i = 0; i < n; ++i)\n            printf(\"%c\", i % 2 + \'a\');\n        puts(\"\");\n    } else {\n        while (n > m) {\n            printf(\"ab\");\n            n -= 2;\n        }\n        if (n == m) {\n            for (int i = 0; i < m; ++i)\n                printf(\"%c\", \'a\'+i);\n        } else {\n            printf(\"a\");\n            for (int i = 2; i < m; ++i)\n                printf(\"%c\", \'a\'+i);\n        }\n        puts(\"\");\n    }\n    return 0;\n}'),(1032,'#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nlong long n, k, res = 1;\nconst long long mod = 1000000007LL;\nint main() {\n    cin >> n >> k;\n    for (int i = 2; i <= k; ++i) {\n        res = (res * k) % mod;\n    }\n    for (int i = k + 1; i <= n; ++i)\n        res = (res * (n - k)) % mod;\n    cout << res << endl;\n    return 0;\n}'),(1033,'#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint x, y, d, n, t;\nchar a[2000000+10];\nchar b[2000000+10];\nint main() {\n    scanf(\"%d%s%s\", &n, a, b);\n    x = 0, y = 0, d = 0, t = 0;\n    for (int i = 0; i < 2 * n; ++i)\n        if (a[i] == \'1\' && b[i] == \'1\') ++d;\n        else if (a[i] == \'1\' && b[i] == \'0\') ++x;\n        else if (a[i] == \'0\' && b[i] == \'1\') ++y;\n        else ++t;\n    int sx = 0, sy = 0;\n    for (int i = 0; i < n; ++i) {\n        //printf(\"%d %d %d %d\\n\", x, y, d, t);\n        if (d > 0) {\n            --d;\n            ++sx;\n        } else if (x > 0) {\n            --x; ++sx;\n        } else if (y > 0) {\n            --y;\n        } else --t;\n        //printf(\"%d %d %d %d\\n\\n\", x, y, d, t);\n        if (d > 0) {\n            --d;\n            ++sy;\n        } else if (y > 0) {\n            --y; ++sy;\n        } else if (x > 0) {\n            --x;\n        } else --t;\n    }\n    if (sx > sy) puts(\"First\");\n    else if (sx == sy) puts(\"Draw\");\n    else puts(\"Second\");\n    return 0;\n}'),(1034,'#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <map>\nusing namespace std;\nstring gao(string s) {\n    if (s.length() % 2) return s;\n    string left = gao(s.substr(0, s.length() / 2));\n    string right = gao(s.substr(s.length() / 2, s.length() / 2));\n    if (left > right) swap(left, right);\n    return left + right;\n}\nstring sa, sb;\nint main() {\n    cin >> sa >> sb;\n    puts(gao(sa) == gao(sb) ? \"YES\" : \"NO\");\n    return 0;\n}\n'),(1035,'#include <iostream>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\nint a, b, c, d, e, f;\nint cnt(int x) {\n    return (x + 1) * x / 2 + (x - 1) * x / 2;\n}\nint main() {\n    cin >> a >> b >> c >> d >> e >> f;\n    int s = a + b + c;\n    cout << cnt(s) - cnt(a) - cnt(c) - cnt(e) << endl;\n    return 0;\n}'),(1036,'#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#include<ctime>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<cmath>\n#include<set>\n#include<map>\n#include<bitset>\n#include<vector>\n#define Rep(x,a,b) for (int x=a;x<=b;x++)\n#define Drp(x,a,b) for (int x=a;x>=b;x--)\n#define Cross(x,a) for (int x=Hd[a];~x;x=Nx[x])\n#define ll long long\n#define INF (1<<29)\n#define PII pair<int,int>\n#define PDD pair<double,double>\n#define mk(a,b) make_pair(a,b)\n#define fr first\n#define sc second\nusing namespace std;\ninline ll IN(){\n	ll x=0;int ch=getchar(),f=1;\n	while (!isdigit(ch)&&(ch!=\'-\')&&(ch!=EOF)) ch=getchar();\n	if (ch==\'-\'){f=-1;ch=getchar();}\n	while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-\'0\';ch=getchar();}\n	return x*f;\n}\ninline void OUT(ll x){\n	if (x<0) putchar(\'-\'),x=-x;\n	if (x>=10) OUT(x/10),putchar(x%10+\'0\');\n		else putchar(x+\'0\');\n}\nconst int N=6405,M=64005;\nint n,m;\nconst int Ps[4][2]={{0,1},{0,-1},{-1,0},{1,0}};\nint ID(int i,int j){return (i-1)*m+j;}\nint Cnt,To[M],Nx[M],Cs[M],Fl[M],Hd[N]; \nvoid AddEdge(int u,int v,int cost,int f){\n	To[Cnt]=v;Nx[Cnt]=Hd[u];Cs[Cnt]= cost;Fl[Cnt]=f;Hd[u]=Cnt++;\n	To[Cnt]=u;Nx[Cnt]=Hd[v];Cs[Cnt]=-cost;Fl[Cnt]=0;Hd[v]=Cnt++;\n}\nint Pr[N],Ds[N],S,T,Ans,a[85][85];\nbool Vs[N];\nqueue<int>Q;\nbool SPFA(){\n	memset(Ds,60,sizeof Ds);\n	Ds[S]=0;\n	Q.push(S);\n	while (!Q.empty()){\n		int u=Q.front();Q.pop();\n		Vs[u]=0;\n		Cross(i,u){\n			int v=To[i];\n			if (Fl[i]&&Ds[u]+Cs[i]<Ds[v]){\n				Ds[v]=Ds[u]+Cs[i],Pr[v]=i;\n				if (!Vs[v]){Q.push(v);Vs[v]=1;}\n			}\n		}\n	}\n	return Ds[T]<500000000;\n}\nvoid Edmonds_Karp(){\n	while (SPFA()){\n		int Nw=T,Mx=INF;\n		while (Nw!=S){\n			Mx=min(Mx,Fl[Pr[Nw]]);\n			Nw=To[Pr[Nw]^1];\n		}\n		Ans+=Mx*Ds[T];\n		Nw=T;\n		while (Nw!=S){\n			Fl[Pr[Nw]]-=Mx;\n			Fl[Pr[Nw]^1]+=Mx;\n			Nw=To[Pr[Nw]^1];\n		}\n	}\n}\nint main(){\n	n=IN(),m=IN();\n	Rep(i,1,n) Rep(j,1,m) a[i][j]=IN();\n	S=0,T=n*m+1;\n	memset(Hd,-1,sizeof Hd);\n	Rep(i,1,n) Rep(j,1,m){\n		int Tp=ID(i,j);\n		if ((i+j)&1) AddEdge(Tp,T,0,1);\n			else AddEdge(S,Tp,0,1);\n		Rep(k,0,3){\n			int Ni=i+Ps[k][0],Nj=j+Ps[k][1]; \n			if (Ni>=1&&Ni<=n&&Nj>=1&&Nj<=m){\n				if (a[Ni][Nj]==a[i][j]) AddEdge(Tp,ID(Ni,Nj),0,1);\n					else AddEdge(Tp,ID(Ni,Nj),1,1);\n			}\n		}\n	}\n	Edmonds_Karp();\n	OUT(Ans);\n}'),(1037,'#include<cstdio>\n#include<algorithm>\n#include<queue>\n#define mp make_pair\n#define pii pair<int,int>\n#define M 300010\n#define inf 0x37373737\nusing namespace std;\nconst int N = 301010;\nstruct MCMF{\n	int h[N] , dis[N] , ing[N] , pre[N] , s , t , n;\n	int to[M] , ne[M] , cap[M] , cost[M] , e;\n	void ini(){\n		fill(h,h+N,-1);\n		e = 0;\n	}\n	void liu(int u,int v,int c,int w){\n		to[e] = v , ne[e] = h[u] , cap[e] = c , cost[e] = w;\n		h[u] = e++;\n	}\n	void link(int u,int v,int c,int w){\n		liu(u,v,c,w);\n		liu(v,u,0,-w);\n	}\n	bool spfa(){\n		queue<int> Q;\n		fill(ing,ing+n,0);\n		fill(pre,pre+n,-1);\n		fill(dis,dis+n,inf);\n		ing[s] = true , dis[s] = 0;\n		Q.push(s);\n		while(!Q.empty()){\n			int c = Q.front();Q.pop();ing[c] = false;\n			for(int k=h[c];~k;k=ne[k]){\n				int v = to[k];\n				if(cap[k] <= 0) continue;\n				if(dis[c] +  cost[k] < dis[v]){\n					dis[v] = dis[c] + cost[k];\n					pre[v] = k;\n					if(!ing[v]) Q.push(v) , ing[v] = true;\n				}\n			}\n		}\n		return dis[t] != inf;\n	}\n	int flow , mincost;\n	pii run(int _s,int _t,int _n){\n		s = _s , t = _t , n = _n;\n		flow = mincost = 0;\n		while(spfa()){\n			int pl = inf , p , k;\n			for(p=t;p!=s;p=to[k^1]){\n				k = pre[p];\n				pl = min(pl,cap[k]);\n			}\n			for(p=t;p!=s;p=to[k^1]){\n				k = pre[p];\n				cap[k] -= pl;\n				cap[k^1] += pl;\n			}\n			mincost += pl * dis[t];\n			flow += pl;\n		}\n		return mp(flow,mincost);\n	}\n};\nMCMF mcmf;\nint n,m,i,j,a[100][100],s,t;\nint o(int x,int y)\n{\n	return (x-1)*m+y;\n}\nint main()\n{\n	scanf(\"%d%d\",&n,&m);\n	mcmf.ini();\n	s=0;t=n*m+1;\n	for (i=1;i<=n;i++)\n	for (j=1;j<=m;j++)\n	{\n		scanf(\"%d\",&a[i][j]);\n		if ((i+j)%2==0)\n		mcmf.link(s,o(i,j),1,0);\n		else\n		mcmf.link(o(i,j),t,1,0);\n	}\n	for (i=1;i<=n;i++)\n	for (j=1;j<=m;j++)\n	if ((i+j)%2==0)\n	{\n		if (i+1<=n) mcmf.link(o(i,j),o(i+1,j),1,a[i][j]==a[i+1][j]?0:1);\n		if (i-1>0) mcmf.link(o(i,j),o(i-1,j),1,a[i][j]==a[i-1][j]?0:1);\n		if (j+1<=m) mcmf.link(o(i,j),o(i,j+1),1,a[i][j]==a[i][j+1]?0:1);\n		if (j-1>0) mcmf.link(o(i,j),o(i,j-1),1,a[i][j]==a[i][j-1]?0:1);\n	}\n	printf(\"%d\\n\",mcmf.run(s,t,n*m+10).second);\n}'),(1038,'#include <queue>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define S 0\n#define T (n*m+1)\n#define INF 1000000000\n#define ID(x, y) (((x)-1)*m+(y))\n#define Rep(x, a, b) for(int x=a; x<=b; x++)\nconst int dx[4]={0,0,1,-1};\nconst int dy[4]={1,-1,0,0};\nint head[10000], Dis[10000], cnt, c[100][100], Pre[10000], n, m, inq[10000], Cost;\nstruct data{\n	int from, to, next, cap, flow, cost;\n}edge[1000000];\nvoid AddEdge(int u, int v, int c, int w){\n	edge[cnt]=(data){ u, v, head[u], c, 0, +w }; head[u]=cnt++;\n	edge[cnt]=(data){ v, u, head[v], 0, 0, -w }; head[v]=cnt++;\n}\nqueue<int> Q;\nbool Spfa(){\n	Rep(i, S, T) Dis[i]=INF, Pre[i]=-1;\n	Q.push(S); Dis[S]=0;\n	while(!Q.empty())\n	{\n		int u=Q.front(); Q.pop(); inq[u]=0;\n		for(int i=head[u]; ~i; i=edge[i].next)\n		{\n			int v=edge[i].to;\n			if(Dis[v]>Dis[u]+edge[i].cost && edge[i].cap>edge[i].flow)\n			{\n				Dis[v]=Dis[u]+edge[i].cost; Pre[v]=i;\n				if(!inq[v]) inq[v]=1, Q.push(v);\n			}\n		}\n	}\n	return Dis[T]<1e9;\n}\nvoid Ext(){\n	int flow=1e9;\n	for(int i=Pre[T]; ~i; i=Pre[edge[i].from]) flow=min(flow, edge[i].cap-edge[i].flow);\n	for(int i=Pre[T]; ~i; i=Pre[edge[i].from]) edge[i].flow+=flow, edge[i^1].flow-=flow;\n	Cost+=Dis[T]*flow;\n}\nint main(){\n	scanf(\"%d%d\", &n, &m);\n	Rep(i, 1, n) Rep(j, 1, m) scanf(\"%d\", &c[i][j]);\n	Rep(i, S, T) head[i]=-1;\n	Rep(i, 1, n) Rep(j, 1, m) if((i&1)==(j&1))\n	{\n		AddEdge(S, ID(i, j), 1, 0);\n		Rep(d, 0, 3)\n		{\n			int x=i+dx[d], y=j+dy[d];\n			if(!x || !y || x>n || y>m) continue;\n			if(c[i][j]^c[x][y]) AddEdge(ID(i, j), ID(x, y), 1, 1);\n			else AddEdge(ID(i, j), ID(x, y), 1, 0);\n		}\n	}else AddEdge(ID(i, j), T, 1, 0);\n	while(Spfa()) Ext();\n	printf(\"%d\\n\", Cost);\n}'),(1039,'//by yjz\n#include<bits/stdc++.h>\nusing namespace std;\n#define debug(x) cerr<<#x<<\"=\"<<x<<endl;\n#define FF first\n#define SS second\n#define PB push_back \n#define MP make_pair\ntypedef long long ll;\nconst ll INF=1<<28;\nconst ll LINF=1ll<<61;\n//My own input/output stream\n#define geti(x) x=getnum()\n#define getii(x,y) geti(x),geti(y)\n#define getiii(x,y,z) getii(x,y),geti(z)\n#define puti(x) putnum(x),putsp()\n#define putii(x,y) puti(x),putnum(y),putsp()\n#define putiii(x,y,z) putii(x,y),putnum(z),putsp()\n#define putsi(x) putnum(x),putendl()\n#define putsii(x,y) puti(x),putnum(y),putendl()\n#define putsiii(x,y,z) putii(x,y),putnum(z),putendl()\ninline ll getnum()\n{\n	register ll r=0;register bool ng=0;register char c;c=getchar();\n	while(c!=\'-\'&&(c<\'0\'||c>\'9\'))c=getchar();\n	if(c==\'-\')ng=1,c=getchar();\n	while(c!=\' \'&&c!=\'\\n\')r=r*10+c-\'0\',c=getchar();\n	if(ng)r=-r;return r;\n}\ntemplate <class T> inline void putnum(T x)\n{\n	if(x<0)putchar(\'-\'),x=-x;\n	register short a[20]={},sz=0;\n	while(x>0)a[sz++]=x%10,x/=10;\n	if(sz==0)putchar(\'0\');\n	for(int i=sz-1;i>=0;i--)putchar(\'0\'+a[i]);\n}\ninline void putsp(){putchar(\' \');}\ninline void putendl(){putchar(\'\\n\');}\ninline char mygetchar(){register char c=getchar();while(c==\' \'||c==\'\\n\')c=getchar();return c;}\nstruct KM\n{\n	int n;\n	int lx[5011],ly[5011],slk[5011];\n	int mkx[5011],mky[5011];\n	int mx[5011],my[5011];\n	int head[20000],nxt[20000],to[20000],cost[20000],tot;\n	void init(int _n)\n	{\n		n=_n;\n		tot=0;\n		memset(head,0,sizeof(head));\n	}\n	void add_edge(int x,int y,int c)\n	{\n		nxt[++tot]=head[x];\n		head[x]=tot;\n		to[tot]=y;\n		cost[tot]=c;\n	}\n	int que[5011],qb,qe,pre[5011];\n	void findroute(int y)\n	{\n		for(int x,z;y!=-1;y=z)\n		{\n			x=pre[y];z=mx[x];\n			mx[x]=y;\n			my[y]=x;\n		}\n	}\n	inline void push(int y,int cur)\n	{\n		mkx[my[y]]=mky[y]=cur;\n		que[qe++]=my[y];\n	}\n	void bfs(int cur)\n	{\n		memset(slk,127,sizeof(slk));\n		qb=qe=0;\n		que[qe++]=cur;\n		mkx[cur]=cur;\n		while(true)\n		{\n			for(;qb<qe;qb++)\n			{\n				int x=que[qb];\n				for(int i=head[x];i;i=nxt[i])\n				{\n					int y=to[i];\n					if(mky[y]==cur)continue;\n					if(lx[x]+ly[y]==cost[i])\n					{\n						pre[y]=x;\n						if(my[y]==-1)\n						{\n							findroute(y);\n							return;\n						}\n						push(y,cur);\n					}\n					else if(lx[x]+ly[y]-cost[i]<slk[y])\n					{\n						pre[y]=x;\n						slk[y]=lx[x]+ly[y]-cost[i];\n					}\n				}\n			}\n			int delta=INF;\n			for(int i=1;i<=n;i++)if(mky[i]!=cur)delta=min(delta,slk[i]);\n			for(int i=1;i<=n;i++)\n			{\n				if(mkx[i]==cur)lx[i]-=delta;\n				if(mky[i]==cur)ly[i]+=delta;\n				else if(slk[i]!=INF)slk[i]-=delta;\n			}\n			for(int y=1;y<=n;y++)\n			{\n				if(slk[y]==0)\n				{\n					if(my[y]==-1)\n					{\n						findroute(y);\n						return;\n					}\n					push(y,cur);\n				}\n			}\n		}\n	}\n	int solve()\n	{\n		memset(lx,0,sizeof(lx));\n		memset(ly,0,sizeof(ly));\n		memset(mx,-1,sizeof(mx));\n		memset(my,-1,sizeof(my));\n		for(int i=1;i<=n;i++)bfs(i);\n		int ans=0;\n		for(int i=1;i<=n;i++)\n		{\n			for(int j=head[i];j;j=nxt[j])\n			{\n				if(to[j]==mx[i])\n				{\n					ans+=cost[j];\n					break;\n				}\n			}\n		}\n		return ans;\n	}\n}km;\nint n,m,a[100][100],id[100][100];\nbool f[100][100];\nconst int dx[4]={1,-1,0,0};\nconst int dy[4]={0,0,1,-1};\nint main()\n{\n	getii(n,m);\n	for(int i=1;i<=n;i++)\n	{\n		for(int j=1;j<=m;j++)\n		{\n			geti(a[i][j]);\n		}\n	}\n	int tot1=0,tot2=0;\n	for(int i=1;i<=n;i++)\n	{\n		f[i][1]=f[i-1][1]^1;\n		for(int j=2;j<=m;j++)f[i][j]=f[i][j-1]^1;\n		for(int j=1;j<=m;j++)\n		{\n			if(f[i][j])id[i][j]=++tot1;\n			else id[i][j]=++tot2;\n		}\n	}\n	km.init(tot1);\n	for(int i=1;i<=n;i++)\n	{\n		for(int j=1;j<=m;j++)\n		{\n			if(!f[i][j])continue;\n			for(int k=0;k<4;k++)\n			{\n				int ni=i+dx[k],nj=j+dy[k];\n				if(ni>=1&&nj>=1&&ni<=n&&nj<=m)\n				{\n					km.add_edge(id[i][j],id[ni][nj],-(a[i][j]!=a[ni][nj]));\n				}\n			}\n		}\n	}\n	cout<<-km.solve();\n	return 0;\n}'),(1040,'#include <bits/stdc++.h>\n\nusing namespace std;\n#define DEBUG_ON 1\n\n#define INF 0x3f3f3f3f\n#define NSYNC ios::sync_with_stdio(false);\n#define FOR(i,a,b) for(int i=a; i<(b); ++i)\n#define FOR0(i,b) for(int i=0; i<(b); ++i)\n#define TRAV(it,c) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)\n#define RTRAV(it,c) for(__typeof((c).rbegin()) it=(c).rbegin(); it!=(c).rend(); ++it)\n#define DBG(x) if(DEBUG_ON) cout << #x << \" == \" << x << endl\n#define DBGP(x) if(DEBUG_ON) cout << \"(\" << (x).first << \", \" << (x).second << \")\" << endl\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair(x,y)\n#define R(x) scanf(\" %d\",&(x))\n#define RR(x,y) scanf(\" %d %d\",&(x), &(y))\n#define RRR(x,y,z) scanf(\" %d %d %d\",&(x), &(y),&(z))\n#define CLR(v) memset(v, 0, sizeof(v))\n#define SET(v) memset(v, -1, sizeof(v))\n\ntypedef long long ll;\ntypedef int int_type;\ntypedef pair<int_type, int_type> pii;\ntypedef vector<int_type> vi;\ntypedef vector<vi> vii;\n\n#include <algorithm>\nusing namespace std;\n\n#define N 6450\n#define M (2*64500) // dobro do número de arestas\n#define INF 0x3f3f3f3f\n\nint vt, ve[M], re[M], ze[M], nextt[M];\nint in[N], head[N], path[N], dis[N], qu[N], lim[N];\n\nvoid init() {\n  vt = 1;\n  memset(head, 0, sizeof(head));\n}\n\nvoid add(int x, int y, int cap, int wei = 0) {\n  // aresta x->y é armazenada em [vt+1] e [vt+2]\n  ve[++vt] = y; re[vt] = cap; ze[vt] = wei;\n  nextt[vt] = head[x]; head[x] = vt;\n  ve[++vt] = x; re[vt] = 0; ze[vt] = -wei;\n  nextt[vt] = head[y]; head[y] = vt;\n}\n\nint mfmc(int s, int t, int n, int &fcost) {\n  int flow = fcost = 0;\n  while (1) {\n    int qt = 0, k = 0;\n    qu[qt++] = s;\n    for (int i = 0; i < n; i++)\n      dis[i] = lim[i] = INF;\n    dis[s] = 0;\n    \n    while (k != qt) {\n      if (k == N) k = 0;\n      int x = qu[k++];\n      for (int i = head[x]; i; i = nextt[i]) // ve[i]: adjs de x\n        if (re[i] && dis[x] + ze[i] < dis[ve[i]]){\n          dis[ve[i]] = dis[x] + ze[i];\n          path[ve[i]] = i;\n          lim[ve[i]] = min(lim[x], re[i]);\n          if (!in[ve[i]]) {\n            if (qt == N) qt = 0;\n            qu[qt++] = ve[i];\n            in[ve[i]] = 1;\n          }\n        }\n      in[x] = 0;\n    }\n    \n    if (dis[t] == INF) break;\n    int f = lim[t];\n    for (int p = t; p != s; p = ve[path[p] ^ 1]) {\n      re[path[p]] -= f; re[path[p] ^ 1] += f; // novo residual\n    }\n    fcost += f * dis[t];\n    flow += f;\n  }\n  return flow;\n}\n\n/** Código abaixo apenas para Min Cut **/\n\n/* mark[v] = true, se v esta no mesmo lado de u no corte */\nbool mark[N];\n\nvoid DFS(int u) {\n  mark[u] = true;\n  for (int i = head[u]; i; i = nextt[i]) {\n    if (i % 2) continue;\n    int v = ve[i];\n    if (!mark[v] && re[i] > 0) {\n      DFS(v);\n    }\n  }\n }\n\nvoid mincut(int s, int t, int n) {\n  memset(mark, 0, sizeof(mark));\n  DFS(s);\n  /* Arestas do corte */\n  for (int i = 0; i < n; i++)\n    for (int j = head[i]; j; j = nextt[j]) {\n      if (j % 2) continue;\n      int v = ve[j];\n      if (mark[i] && !mark[v])\n        printf(\"%d %d\\n\", i, v);\n    }\n}\n\n// /**** Exemplo simples de uso ****/\n// int main() {\n//   int n, m;\n//   while (scanf(\"%d %d\",&n,&m) == 2) {\n//     int from, to, cp, co;\n//     init();\n//     for (int i = 0; i < m; i++) {\n//       scanf(\"%d %d %d %d\",&from,&to,&cp, &co);\n//       add(from, to, cp, co);\n//     }\n//     int s=0, t=1;\n//     int fcost, flow=mfmc(s,t,n,fcost);\n//     printf(\"Fluxo: %d\\nCusto: %d\\n\",flow,fcost);\n\n//     for (int i = 1; i <= m; i++) {\n//       printf(\"f(%d->%d) = %d\\n\",ve[2*i+1],ve[2*i],re[2*i+1]);\n//       printf(\"r(%d->%d) = %d\\n\",ve[2*i+1],ve[2*i],re[2*i]);\n//     }\n\n//     mincut(s, t, n);\n//   }\n//   return 0;\n// }\n\nint grid[100][100];\nint dx[] = {0,0,1,-1};\nint dy[] = {1,-1,0,0};\n\ninline int getid(int i, int j) {\n	return i*80 + j + 1;\n}\n\nint main() {\n	NSYNC;\n	int nn,mm;\n	cin >> nn >> mm;\n	FOR0(i,nn) FOR0(j,mm) {\n		cin >> grid[i][j];\n	}\n	int qsz = nn*mm/2;\n	init();\n	FOR0(i,nn) FOR0(j,mm) {\n		if((i+j)&1) {\n			// cap[0][getid(i,j)] = 1;\n			add(0,getid(i,j),1);\n			FOR0(k,4) {\n				int nx = i + dx[k];\n				int ny = j + dy[k];\n				if(nx>=0 && nx<nn && ny>=0 && ny<mm) {\n					// cap[getid(i,j)][getid(nx,ny)] = 1;\n					// cost[getid(i,j)][getid(nx,ny)] = grid[i][j]==grid[nx][ny] ? 0 : 1;\n					add(getid(i,j),getid(nx,ny),1,grid[i][j]==grid[nx][ny] ? 0 : 1);\n				}\n			}\n		}\n		else {\n			add(getid(i,j),6401,1);\n			// cap[getid(i,j)][6401] = 1;\n		}\n	}\n	int s = 0;\n	int t = 6401;\n	int n = 6402;\n	int fcost;\n	int flow = mfmc(s,t,n,fcost);	\n	cout << fcost << endl;\n	// while(true);\n	return 0;\n}'),(1041,'#include <cstdio>\n#include <cstring>\n#include <algorithm>\ntemplate <typename T> inline void tension(T &a, const T &b){if (a>b) a=b;}\ntemplate <typename T> inline bool tensionv(T &a, const T &b){return a>b?a=b, true:false;}\ninline unsigned int getuint(){\n	char w=getchar();\n	while (w<\'0\'||\'9\'<w) w=getchar();\n	unsigned int ans=0;\n	for (;\'0\'<=w&&w<=\'9\';w=getchar()) ans=ans*10+w-\'0\';\n	return ans;\n}\nconst int dx[]={1, -1, 0, 0};\nconst int dy[]={0, 0, 1, -1};\nint a[233][233], id[233][233];\nint V, S, T;\nconst int MAXV=233333, MAXE=233333;\nstruct Edge{int t, next, cap, v;} G[MAXE];int head[MAXV], e=1;\ninline void add_double_edge(int x, int y, int z, int v){\n	//printf(\"%d %d %d %d\\n\", x, y, z, v);\n	G[++e].t=y, G[e].next=head[x], head[x]=e;G[e].cap=z, G[e].v=v;\n	G[++e].t=x, G[e].next=head[y], head[y]=e;G[e].cap=0, G[e].v=-v;\n}\nstruct ZKW_Min_Cost_Flow{\n	int dist[MAXV], inq[MAXV];\n	std::pair<int, int> heap[MAXE];int heap_size;\n	void SPFA(){\n		memset(dist+1, 0x3f, sizeof(*dist)*V), heap[heap_size++]=std::make_pair(-(dist[T]=0), T), std::push_heap(heap, heap+heap_size);\n		for (int d, x;heap_size;){\n			d=-heap->first, x=heap->second, std::pop_heap(heap, heap+heap_size--);\n			if (d!=dist[x]) continue;\n			for (int i=head[x];i;i=G[i].next) if (G[i^1].cap&&tensionv(dist[G[i].t], dist[x]-G[i].v))\n				heap[heap_size++]=std::make_pair(-dist[G[i].t], G[i].t), std::push_heap(heap, heap+heap_size);\n		}\n	}\n	int dfs(int x, int aug){\n		if (x==T) return aug;inq[x]=1;\n		int now=aug;\n		for (int i=head[x];i;i=G[i].next) if (!inq[G[i].t]&&G[i].cap&&dist[x]==dist[G[i].t]+G[i].v){\n			int flow=dfs(G[i].t, std::min(aug, G[i].cap));\n			if (flow){\n				G[i].cap-=flow, G[i^1].cap+=flow, now-=flow;\n				if (!now) break;\n			}\n		}\n		return aug-now;\n	}\n	bool modify_label(){\n		int t=0x3f3f3f3f;\n		for (int x=1;x<=V;x++) if (inq[x]) for (int i=head[x];i;i=G[i].next) if (!inq[G[i].t]&&G[i].cap) tension(t, dist[G[i].t]+G[i].v-dist[x]);\n		if (t==0x3f3f3f3f) return false;\n		for (int i=1;i<=V;i++) if (inq[i]) dist[i]+=t;\n		return true;\n	}\n	int min_cost_flow(){\n		SPFA();\n		int ans=0;\n		for (;;){\n			for (int t;;){\n				memset(inq+1, 0, sizeof(*inq)*V);\n				if (t=dfs(S, 0x3f3f3f3f)) ans+=dist[S]*t; else break;\n			}\n			if (!modify_label()) break;\n		}\n		return ans;\n	}\n} MCF;\nint main(){\n	//freopen(\"ex.in\", \"r\", stdin);\n	int n=getuint(), m=getuint();\n	for (int i=1;i<=n;i++) for (int j=1;j<=m;id[i][j++]=++V) a[i][j]=getuint();\n	S=++V, T=++V;\n	for (int i=1;i<=n;i++) for (int j=1;j<=m;j++) if (i+j&1){\n		add_double_edge(S, id[i][j], 1, 0);\n		for (int f=0;f<4;f++){\n			int x=i+dx[f], y=j+dy[f];\n			if (x<1||x>n||y<1||y>m) continue;\n			add_double_edge(id[i][j], id[x][y], 1, a[i][j]!=a[x][y]);\n		}\n	} else add_double_edge(id[i][j], T, 1, 0);\n	printf(\"%d\\n\", MCF.min_cost_flow());\n	return 0;\n}'),(1042,'#include <bits/stdc++.h>\n\nusing namespace std;\n\nint sz=0,vcounter=10;\nlong long p[100005];\nbool mk[5000];\nchar s[100005],ncad[100005];\n\nint main()\n{\n\n    scanf(\"%s\", s);\n    int len = strlen(s);\n    for(int i=0;i<len;i++)\n    {\n        if(mk[s[i]] && s[i] != \'?\') continue;\n        ncad[sz++] = s[i];\n        mk[s[i]] = true;\n    }\n    int len1 = strlen(ncad),t=0;\n    long long sol = 1;\n    if(ncad[0] == \'?\') sol = 9;\n    if(ncad[0] >= \'A\' && ncad[0] <= \'J\')\n    {\n        sol = 9;\n        vcounter = 9;\n    }\n    for(int i=1;i<len1;i++)\n    {\n        if(ncad[i] >= \'A\' && ncad[i] <= \'J\')\n        {\n            sol*=vcounter;\n            vcounter--;\n        }\n        if(ncad[i] == \'?\') t++;\n    }\n\n    cout<<sol;//(\"%I64d\", sol);\n    for(int i=1;i<=t;i++)\n        printf(\"0\");\n\n    return 0;\n}');
/*!40000 ALTER TABLE `source_code` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `topic`
--

DROP TABLE IF EXISTS `topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `topic` (
  `tid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varbinary(60) NOT NULL,
  `status` int(2) NOT NULL DEFAULT '0',
  `top_level` int(2) NOT NULL DEFAULT '0',
  `cid` int(11) DEFAULT NULL,
  `pid` int(11) NOT NULL,
  `author_id` varchar(48) NOT NULL,
  PRIMARY KEY (`tid`),
  KEY `cid` (`cid`,`pid`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topic`
--

LOCK TABLES `topic` WRITE;
/*!40000 ALTER TABLE `topic` DISABLE KEYS */;
INSERT INTO `topic` VALUES (1,'test',0,0,0,1001,'admin');
/*!40000 ALTER TABLE `topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `user_id` varchar(48) NOT NULL DEFAULT '',
  `email` varchar(100) DEFAULT NULL,
  `submit` int(11) DEFAULT '0',
  `solved` int(11) DEFAULT '0',
  `defunct` char(1) NOT NULL DEFAULT 'N',
  `ip` varchar(20) NOT NULL DEFAULT '',
  `accesstime` datetime DEFAULT NULL,
  `volume` int(11) NOT NULL DEFAULT '1',
  `language` int(11) NOT NULL DEFAULT '1',
  `password` varchar(32) DEFAULT NULL,
  `reg_time` datetime DEFAULT NULL,
  `nick` varchar(100) NOT NULL DEFAULT '',
  `school` varchar(100) NOT NULL DEFAULT '',
  `locale` char(7) DEFAULT NULL,
  `theme` char(30) DEFAULT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES ('spidermandl','spiderman.dl@gmail.com',0,0,'Y','127.0.0.1','2016-06-12 20:43:24',1,1,'Sd1cnKEP4R7WJlavC9v0wGsupQdmNjE0','2016-06-12 20:43:24','desmond','tongji','en',NULL),('orientalstu','12345678@qq.com',1,0,'N','211.161.247.219','2016-07-09 22:03:48',1,0,'sD4JtgUF53tQhpoRZZfKo57DMBFjYmRm','2016-06-12 22:31:25','desmond','tj','en',NULL),('admin','87654321@qq.com',41,28,'N','61.170.136.151','2016-07-16 16:11:04',1,1,'krsGGNs2W/Tvz+ddCm/PtUtlCCI4Mzgz','2016-06-13 00:07:11','admin','stju','en',NULL),('des1','des1@qq.com',0,0,'N','180.154.204.137','2016-06-22 16:22:39',1,1,'TBWgzdZfhzKRM/adYo1C9T1h990zYzUw','2016-06-22 15:04:32','des1','none','en',NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-07-18  1:55:38
